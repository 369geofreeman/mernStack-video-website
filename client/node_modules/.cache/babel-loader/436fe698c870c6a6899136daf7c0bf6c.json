{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/CategoryPlayer/CategoryPlayer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport PageLoadingLogo from \"../../layout/PageLoadingLogo\"; // Redux\n\nimport { currentCategoryIndex } from \"../../store/actions/Index\"; // Helper functions\n\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\"; // Components\n\nimport VideoTitleViewAll from \"../../components/VideoTitle/VIdeoTitleViewAll\";\nimport CategoryPlayerButtons from \"./CategoryPlayerButtons\";\nimport \"./CategoryPlayer.scss\";\n\nconst CategoryPlayer = ({\n  currentCategoryIndex,\n  VideoIndex,\n  modalOpen,\n  vidTitle,\n  categoryVideos: {\n    categoryVideos,\n    categoryLoading\n  }\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const [videos] = useState(categoryVideos);\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n  useEffect(() => {\n    if (rightPress || dPress) !modalOpen && currentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1); // eslint-disable-next-line;\n  }, [VideoIndex, rightPress, dPress, videoLen, currentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) !modalOpen && currentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1); // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, currentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    currentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  let slides = videos.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(VideoTitleViewAll, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(CategoryPlayerButtons, {\n      nextIndex: nextIndex,\n      to: `/categories/${vidTitle}/${videos[vidUrlIndexTo]._id}`,\n      previousIndex: previousIndex,\n      from: `/categories/${vidTitle}/${videos[vidUrlIndexFrom]._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: videos[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\",\n            disablepictureinpicture: \"true\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  });\n  return categoryLoading ? React.createElement(PageLoadingLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"catergoryPlayerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, slides));\n}; // Redux Vars\n\n\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.categoryIndex,\n    vidTitle: state.VideoIndex.categoryTitle,\n    modalOpen: state.ModalOpen.modalOpen,\n    categoryVideos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  currentCategoryIndex\n})(CategoryPlayer);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/CategoryPlayer/CategoryPlayer.js"],"names":["React","useState","useEffect","connect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","PageLoadingLogo","currentCategoryIndex","useKeyPress","useWindowDimensions","VideoTitleViewAll","CategoryPlayerButtons","CategoryPlayer","VideoIndex","modalOpen","vidTitle","categoryVideos","categoryLoading","width","height","videos","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","prevState","nextIndex","previousIndex","vidUrlIndexTo","vidUrlIndexFrom","slides","map","slide","index","vidLink","title","category","categoryTag","_id","backgroundColor","file","attributes","controlsList","disablepictureinpicture","mapStateToProps","state","categoryIndex","categoryTitle","ModalOpen","Videos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport PageLoadingLogo from \"../../layout/PageLoadingLogo\";\n// Redux\nimport { currentCategoryIndex } from \"../../store/actions/Index\";\n// Helper functions\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\n// Components\nimport VideoTitleViewAll from \"../../components/VideoTitle/VIdeoTitleViewAll\";\nimport CategoryPlayerButtons from \"./CategoryPlayerButtons\";\nimport \"./CategoryPlayer.scss\";\n\nconst CategoryPlayer = ({\n  currentCategoryIndex,\n  VideoIndex,\n  modalOpen,\n  vidTitle,\n  categoryVideos: { categoryVideos, categoryLoading }\n}) => {\n  const { width, height } = useWindowDimensions();\n  const [videos] = useState(categoryVideos);\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  useEffect(() => {\n    if (rightPress || dPress)\n      !modalOpen &&\n        currentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    // eslint-disable-next-line;\n  }, [\n    VideoIndex,\n    rightPress,\n    dPress,\n    videoLen,\n    currentCategoryIndex,\n    modalOpen\n  ]);\n  useEffect(() => {\n    if (leftPress || aPress)\n      !modalOpen &&\n        currentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, currentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress)\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    currentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  let slides = videos.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitleViewAll\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <CategoryPlayerButtons\n          nextIndex={nextIndex}\n          to={`/categories/${vidTitle}/${videos[vidUrlIndexTo]._id}`}\n          previousIndex={previousIndex}\n          from={`/categories/${vidTitle}/${videos[vidUrlIndexFrom]._id}`}\n        />\n        <ReactPlayer\n          url={videos[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\",\n                disablepictureinpicture: \"true\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  return categoryLoading ? (\n    <PageLoadingLogo />\n  ) : (\n    <div className=\"catergoryPlayerContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n      >\n        {slides}\n      </AwesomeSlider>\n    </div>\n  );\n};\n\n// Redux Vars\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.categoryIndex,\n    vidTitle: state.VideoIndex.categoryTitle,\n    modalOpen: state.ModalOpen.modalOpen,\n    categoryVideos: state.Videos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { currentCategoryIndex }\n)(CategoryPlayer);\n"]},"metadata":{},"sourceType":"module"}