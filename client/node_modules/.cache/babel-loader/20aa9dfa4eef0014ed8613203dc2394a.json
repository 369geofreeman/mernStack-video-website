{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\"; // MyComponenets\n\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\"; // Redux vars\n\nimport { currentIndex, getSelectedVideos } from \"../../store/actions/Index\"; // Dummy data ( DUMMY_DATA_NSFW )\n// import { DUMMY_DATA_SFW as DUMMY_DATA } from \"../../assets/dummyData/videos\";\n\nimport jData from \"../../assets/dummyData/categoryVids/AllCategories.json\"; // Helper functions\n\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\"; // Styles\n\nimport \"./HomePage.scss\";\n\nconst HomePage = ({\n  currentIndex,\n  currentVideos,\n  VideoIndex,\n  modalOpen\n}) => {\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [videos] = useState(jData); // Use jData for now\n\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \"); // Set the Video index from URL\n  // let VideoIndex = 0;\n  // if (window.location.href.split(\"/\")[3]) {\n  //   for (let i = 0; i < videos.length; i++) {\n  //     if (videos[i]._id === +window.location.href.split(\"/\")[3]) VideoIndex = i;\n  //   }\n  // } else {\n  //   VideoIndex = VideoIndexRedux;\n  // }\n  // Get Videos\n\n  useEffect(() => {\n    setVideos(currentVideos);\n  }); // Assign keybord to video controlls\n\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    } // eslint-disable-next-line\n\n  }, [rightPress, dPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    } // eslint-disable-next-line\n\n  }, [leftPress, aPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]); // Set video Controlls\n\n  const nextIndex = () => {\n    currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let slides = videos.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(VideoTitle, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: videos[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  });\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  return React.createElement(\"div\", {\n    className: \"mainPageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, slides), React.createElement(HomePageButtons, {\n    nextIndex: nextIndex,\n    to: `/${videos[vidUrlIndexTo]._id}`,\n    previousIndex: previousIndex,\n    from: `/${videos[vidUrlIndexFrom]._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}; //  Redux mapping\n\n\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen,\n    loading: state.Videos.loading,\n    currentVideos: state.Videos.videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  currentIndex\n})(HomePage);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js"],"names":["React","useState","useEffect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","connect","HomePageButtons","VideoTitle","currentIndex","getSelectedVideos","jData","useKeyPress","useWindowDimensions","HomePage","currentVideos","VideoIndex","modalOpen","height","width","videos","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","setVideos","prevState","nextIndex","previousIndex","slides","map","slide","index","vidLink","title","category","categoryTag","backgroundColor","file","attributes","controlsList","vidUrlIndexTo","vidUrlIndexFrom","_id","mapStateToProps","state","ModalOpen","loading","Videos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\";\n\n// MyComponenets\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\";\n// Redux vars\nimport { currentIndex, getSelectedVideos } from \"../../store/actions/Index\";\n// Dummy data ( DUMMY_DATA_NSFW )\n// import { DUMMY_DATA_SFW as DUMMY_DATA } from \"../../assets/dummyData/videos\";\nimport jData from \"../../assets/dummyData/categoryVids/AllCategories.json\";\n// Helper functions\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\n// Styles\nimport \"./HomePage.scss\";\n\nconst HomePage = ({ currentIndex, currentVideos, VideoIndex, modalOpen }) => {\n  const { height, width } = useWindowDimensions();\n  const [videos] = useState(jData); // Use jData for now\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  // Set the Video index from URL\n  // let VideoIndex = 0;\n  // if (window.location.href.split(\"/\")[3]) {\n  //   for (let i = 0; i < videos.length; i++) {\n  //     if (videos[i]._id === +window.location.href.split(\"/\")[3]) VideoIndex = i;\n  //   }\n  // } else {\n  //   VideoIndex = VideoIndexRedux;\n  // }\n\n  // Get Videos\n  useEffect(() => {\n    setVideos(currentVideos);\n  });\n\n  // Assign keybord to video controlls\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    }\n    // eslint-disable-next-line\n  }, [rightPress, dPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    }\n    // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]);\n\n  // Set video Controlls\n  const nextIndex = () => {\n    currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let slides = videos.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitle\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <ReactPlayer\n          url={videos[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  return (\n    <div className=\"mainPageContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n      >\n        {slides}\n      </AwesomeSlider>\n      <HomePageButtons\n        nextIndex={nextIndex}\n        to={`/${videos[vidUrlIndexTo]._id}`}\n        previousIndex={previousIndex}\n        from={`/${videos[vidUrlIndexFrom]._id}`}\n      />\n    </div>\n  );\n};\n\n//  Redux mapping\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen,\n    loading: state.Videos.loading,\n    currentVideos: state.Videos.videos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { currentIndex }\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}