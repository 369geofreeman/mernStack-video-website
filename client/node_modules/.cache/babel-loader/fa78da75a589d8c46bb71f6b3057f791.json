{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"../containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PageLoadingLogo from \"../layout/PageLoadingLogo\";\nimport { categoryTitle, currentCategoryIndex, getCategoryVideos, resetCategoryVideos } from \"../store/actions/Index\";\n\nconst Navigation = ({\n  isAuthenticated: {\n    isAuthenticated,\n    user\n  },\n  videos: {\n    loading,\n    categoryLoading,\n    categoryVideos\n  }\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  const [savedVideos, setSavedVideos] = useState([]); // Start - Turn this into action to set category videos if not set\n\n  useEffect(() => {\n    const category = location.pathname.match(\"/categories/\") ? location.pathname.split(\"/\")[2] : \"\";\n    const categoryTag = [...category].filter(y => y !== \"_\").join(\"\"); // if (categoryVideos.length === 0) {\n    // return categoryTitle(category);\n\n    console.log(categoryTag);\n    return () => getCategoryVideos(category); // }\n  }, [categoryVideos.length, location.pathname]); // End\n\n  useEffect(() => {\n    if (user) setSavedVideos(user.savedVids);\n  }, [setSavedVideos, user]);\n  let routes;\n\n  if (isAuthenticated) {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location.pathname.match(\"/saved\") ? location : background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: loading === false && savedVideos.length > 0 ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/play/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: categoryLoading === false ? CategoryPlayer : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/:userId/profile\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: SavedVidsSlider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  } else {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/play/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: ToggleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: categoryLoading === false ? CategoryPlayer : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: Modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n  return routes;\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate,\n    videos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  categoryTitle,\n  currentCategoryIndex,\n  getCategoryVideos,\n  resetCategoryVideos\n})(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js"],"names":["React","useEffect","useState","Switch","Route","useLocation","connect","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","PageLoadingLogo","categoryTitle","currentCategoryIndex","getCategoryVideos","resetCategoryVideos","Navigation","isAuthenticated","user","videos","loading","categoryLoading","categoryVideos","location","background","state","savedVideos","setSavedVideos","category","pathname","match","split","categoryTag","filter","y","join","console","log","length","savedVids","routes","mapStateToProps","Authenticate","Videos"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"../containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PageLoadingLogo from \"../layout/PageLoadingLogo\";\n\nimport {\n  categoryTitle,\n  currentCategoryIndex,\n  getCategoryVideos,\n  resetCategoryVideos\n} from \"../store/actions/Index\";\n\nconst Navigation = ({\n  isAuthenticated: { isAuthenticated, user },\n  videos: { loading, categoryLoading, categoryVideos }\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  const [savedVideos, setSavedVideos] = useState([]);\n\n  // Start - Turn this into action to set category videos if not set\n\n  useEffect(() => {\n    const category = location.pathname.match(\"/categories/\")\n      ? location.pathname.split(\"/\")[2]\n      : \"\";\n    const categoryTag = [...category].filter(y => y !== \"_\").join(\"\");\n    // if (categoryVideos.length === 0) {\n    // return categoryTitle(category);\n    console.log(categoryTag);\n    return () => getCategoryVideos(category);\n    // }\n  }, [categoryVideos.length, location.pathname]);\n\n  // End\n\n  useEffect(() => {\n    if (user) setSavedVideos(user.savedVids);\n  }, [setSavedVideos, user]);\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = (\n      <div>\n        <Switch\n          location={location.pathname.match(\"/saved\") ? location : background}\n        >\n          <Route\n            exact\n            path=\"/\"\n            component={\n              loading === false && savedVideos.length > 0\n                ? HomePage\n                : PageLoadingLogo\n            }\n          />\n          <Route exact path=\"/play/:vidId\" component={HomePage} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={\n              categoryLoading === false ? CategoryPlayer : PageLoadingLogo\n            }\n          />\n          <PrivateRoute path=\"/:userId/profile\" component={ProfilePage} />\n          <PrivateRoute\n            exact\n            path=\"/saved/:vidId\"\n            component={SavedVidsSlider}\n          />\n          <Route component={loading === false ? HomePage : PageLoadingLogo} />\n        </Switch>\n        {background && (\n          <>\n            <PrivateRoute exact path=\"/saved/:vidId\" component={ProfilePage} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  } else {\n    routes = (\n      <div>\n        <Switch location={background}>\n          <Route\n            exact\n            path=\"/\"\n            component={loading === false ? HomePage : PageLoadingLogo}\n          />\n          <Route exact path=\"/play/:vidId\" component={HomePage} />\n          <Route exact path=\"/auth\" component={ToggleSignIn} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={\n              categoryLoading === false ? CategoryPlayer : PageLoadingLogo\n            }\n          />\n          <Route component={loading === false ? HomePage : PageLoadingLogo} />\n        </Switch>\n        {background && (\n          <>\n            <Route exact path=\"/auth\" component={Modal} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return routes;\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate,\n    videos: state.Videos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    categoryTitle,\n    currentCategoryIndex,\n    getCategoryVideos,\n    resetCategoryVideos\n  }\n)(Navigation);\n"]},"metadata":{},"sourceType":"module"}