{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background; // Sdd if for logged in routes as well\n\n  const routes = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    location: location || background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/:vidId\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/auth\",\n    component: ToggleSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/categories/:categoryId/:vidId\",\n    component: CategoryPlayer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/:userId/profile\",\n    component: ProfilePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/saved/:vidId\",\n    component: SavedVidsSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n    exact: true,\n    path: \"/auth\",\n    component: Modal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/saved/:vidId\",\n    component: ProfilePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/categories\",\n    component: CategoriesOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n  return routes;\n};\n\nexport default Navigation; // import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n//   let routes;\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n//   return routes;\n// };\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n// export default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js"],"names":["React","Switch","Route","useLocation","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","Navigation","location","background","state","routes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\n\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n\n  // Sdd if for logged in routes as well\n  const routes = (\n    <div>\n      <Switch location={location || background}>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/:vidId\" component={HomePage} />\n        <Route exact path=\"/auth\" component={ToggleSignIn} />\n        <Route\n          exact\n          path=\"/categories/:categoryId/:vidId\"\n          component={CategoryPlayer}\n        />\n        <PrivateRoute path=\"/:userId/profile\" component={ProfilePage} />\n        <PrivateRoute path=\"/saved/:vidId\" component={SavedVidsSlider} />\n      </Switch>\n      {background && (\n        <>\n          <Route exact path=\"/auth\" component={Modal} />\n          <PrivateRoute exact path=\"/saved/:vidId\" component={ProfilePage} />\n          <Route exact path=\"/categories\" component={CategoriesOverlay} />\n        </>\n      )}\n    </div>\n  );\n\n  return routes;\n};\n\nexport default Navigation;\n\n// import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n\n//   let routes;\n\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n\n//   return routes;\n// };\n\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n\n// export default connect(mapStateToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}