{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\"; // Redux\n\nimport { userSavedIndex } from \"../../../store/actions/Index\"; // Helper functions\n\nimport useKeyPress from \"../../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../../assets/utils/getWindowDimensions\"; // Components\n\nimport VideoTitle from \"../../VideoTitle/VideoTitle\";\nimport SavedVidsSliderButtons from \"./SavedVidsSliderButtons\";\nimport Spinner from \"../../../layout/Spinner\";\nimport \"./SavedVidsSliderModal.scss\";\n\nconst SavedVidsSlider = ({\n  onResetSavedIndex,\n  VideoIndex,\n  modalOpen,\n  auth: {\n    user,\n    loading\n  }\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const [videos] = useState(user.savedVids);\n  const [videoLen] = useState(user.savedVids.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && onResetSavedIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    } // eslint-disable-next-line\n\n  }, [rightPress, videoLen, dPress, onResetSavedIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && onResetSavedIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    } // eslint-disable-next-line\n\n  }, [leftPress, videoLen, aPress, onResetSavedIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    onResetSavedIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetSavedIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let slides = videos.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(VideoTitle, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: videos[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  });\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  return loading && user === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"savedVidsSliderContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    config: {\n      file: {\n        attributes: {\n          controlsList: \"nodownload\",\n          disablepictureinpicture: \"true\"\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, slides), React.createElement(SavedVidsSliderButtons, {\n    nextIndex: nextIndex,\n    to: `/saved/${videos[vidUrlIndexTo]._id}`,\n    previousIndex: previousIndex,\n    from: `/saved/${videos[vidUrlIndexFrom]._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n}; // Redux Vars\n\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.Authenticate,\n    VideoIndex: state.VideoIndex.userSavedIndex,\n    modalOpen: state.ModalOpen.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetSavedIndex: index => dispatch(userSavedIndex(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedVidsSlider);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider.js"],"names":["React","useState","useEffect","connect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","userSavedIndex","useKeyPress","useWindowDimensions","VideoTitle","SavedVidsSliderButtons","Spinner","SavedVidsSlider","onResetSavedIndex","VideoIndex","modalOpen","auth","user","loading","width","height","videos","savedVids","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","prevState","nextIndex","previousIndex","slides","map","slide","index","vidLink","title","category","categoryTag","backgroundColor","file","attributes","controlsList","vidUrlIndexTo","vidUrlIndexFrom","disablepictureinpicture","_id","mapStateToProps","state","Authenticate","ModalOpen","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\n// Redux\nimport { userSavedIndex } from \"../../../store/actions/Index\";\n// Helper functions\nimport useKeyPress from \"../../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../../assets/utils/getWindowDimensions\";\n// Components\nimport VideoTitle from \"../../VideoTitle/VideoTitle\";\nimport SavedVidsSliderButtons from \"./SavedVidsSliderButtons\";\nimport Spinner from \"../../../layout/Spinner\";\nimport \"./SavedVidsSliderModal.scss\";\n\nconst SavedVidsSlider = ({\n  onResetSavedIndex,\n  VideoIndex,\n  modalOpen,\n  auth: { user, loading }\n}) => {\n  const { width, height } = useWindowDimensions();\n  const [videos] = useState(user.savedVids);\n  const [videoLen] = useState(user.savedVids.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen &&\n        onResetSavedIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    }\n    // eslint-disable-next-line\n  }, [rightPress, videoLen, dPress, onResetSavedIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen &&\n        onResetSavedIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    }\n    // eslint-disable-next-line\n  }, [leftPress, videoLen, aPress, onResetSavedIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    onResetSavedIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetSavedIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let slides = videos.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitle\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <ReactPlayer\n          url={videos[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n\n  return loading && user === null ? (\n    <Spinner />\n  ) : (\n    <div className=\"savedVidsSliderContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n        config={{\n          file: {\n            attributes: {\n              controlsList: \"nodownload\",\n              disablepictureinpicture: \"true\"\n            }\n          }\n        }}\n      >\n        {slides}\n      </AwesomeSlider>\n      <SavedVidsSliderButtons\n        nextIndex={nextIndex}\n        to={`/saved/${videos[vidUrlIndexTo]._id}`}\n        previousIndex={previousIndex}\n        from={`/saved/${videos[vidUrlIndexFrom]._id}`}\n      />\n    </div>\n  );\n};\n\n// Redux Vars\nconst mapStateToProps = state => {\n  return {\n    auth: state.Authenticate,\n    VideoIndex: state.VideoIndex.userSavedIndex,\n    modalOpen: state.ModalOpen.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetSavedIndex: index => dispatch(userSavedIndex(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SavedVidsSlider);\n"]},"metadata":{},"sourceType":"module"}