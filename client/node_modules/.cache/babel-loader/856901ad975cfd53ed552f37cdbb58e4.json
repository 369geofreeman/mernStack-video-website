{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"../containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Navigation = ({\n  isAuthenticated,\n  videos: {\n    loading,\n    videos\n  }\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  let routes;\n\n  if (isAuthenticated) {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location || background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: videos === [] ? HomePage : Spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: CategoryPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/:userId/profile\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/saved/:vidId\",\n      component: SavedVidsSlider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  } else {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location || background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: ToggleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: CategoryPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: Modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  return routes;\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated,\n    videos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js"],"names":["React","Switch","Route","useLocation","Redirect","connect","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","Spinner","Navigation","isAuthenticated","videos","loading","location","background","state","routes","mapStateToProps","Authenticate","Videos"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"../containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Navigation = ({ isAuthenticated, videos: { loading, videos } }) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = (\n      <div>\n        <Switch location={location || background}>\n          <Route\n            exact\n            path=\"/\"\n            component={videos === [] ? HomePage : Spinner}\n          />\n          <Route exact path=\"/:vidId\" component={HomePage} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={CategoryPlayer}\n          />\n          <PrivateRoute path=\"/:userId/profile\" component={ProfilePage} />\n          <PrivateRoute path=\"/saved/:vidId\" component={SavedVidsSlider} />\n          <Redirect to=\"/\" />\n        </Switch>\n        {background && (\n          <>\n            <PrivateRoute exact path=\"/saved/:vidId\" component={ProfilePage} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  } else {\n    routes = (\n      <div>\n        <Switch location={location || background}>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/:vidId\" component={HomePage} />\n          <Route exact path=\"/auth\" component={ToggleSignIn} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={CategoryPlayer}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n        {background && (\n          <>\n            <Route exact path=\"/auth\" component={Modal} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return routes;\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated,\n    videos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}