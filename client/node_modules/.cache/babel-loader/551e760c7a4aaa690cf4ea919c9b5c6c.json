{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\"; // redux\n\nimport { login } from \"../../../../store/actions/Index\"; // components\n\nimport Alert from \"../../../../layout/Alert/Alert\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = ({\n  login,\n  isAuthenticated\n}) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [forgotEmail, setForgotEmail] = useState({\n    forgottenEmail: \"\"\n  });\n  const [passwordResetForm, setPasswordResetForm] = useState(false);\n  const {\n    email,\n    password\n  } = formData;\n  const {\n    forgottenEmail\n  } = forgotEmail;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await login(email, password);\n  };\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; // let body = JSON.stringify({ email });\n    // console.log(typeof body);\n\n    try {\n      await axios.post(\"api/auth/forgot_password\", forgottenEmail, config);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, !passwordResetForm ? React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: () => setPasswordResetForm(!passwordResetForm),\n    className: \"forgotPasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Forgot your password?\"), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"formBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"submitBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handlePasswordReset(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: forgotEmail,\n    onChange: e => setForgotEmail(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: () => setPasswordResetForm(!passwordResetForm),\n    className: \"forgotPasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Back to sign in\"), React.createElement(\"div\", {\n    className: \"formBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Reset Password\",\n    className: \"submitBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(SignInForm);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js"],"names":["React","useState","axios","connect","login","Alert","SignInForm","isAuthenticated","formData","setFormData","email","password","forgotEmail","setForgotEmail","forgottenEmail","passwordResetForm","setPasswordResetForm","onChange","e","target","name","value","onSubmit","preventDefault","handlePasswordReset","config","headers","post","err","console","error","mapStateToProps","state","Authenticate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// redux\nimport { login } from \"../../../../store/actions/Index\";\n// components\nimport Alert from \"../../../../layout/Alert/Alert\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [forgotEmail, setForgotEmail] = useState({ forgottenEmail: \"\" });\n  const [passwordResetForm, setPasswordResetForm] = useState(false);\n\n  const { email, password } = formData;\n  const { forgottenEmail } = forgotEmail;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await login(email, password);\n  };\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    // let body = JSON.stringify({ email });\n    // console.log(typeof body);\n    try {\n      await axios.post(\"api/auth/forgot_password\", forgottenEmail, config);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"registerFormContainer\">\n      {!passwordResetForm ? (\n        <form onSubmit={e => onSubmit(e)}>\n          <div>\n            <input\n              className=\"registerFormEmail\"\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div>\n            <input\n              className=\"registerFormEmail\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              minLength=\"6\"\n              value={password}\n              onChange={e => onChange(e)}\n              required\n            />\n            <div\n              onClick={() => setPasswordResetForm(!passwordResetForm)}\n              className=\"forgotPasswordText\"\n            >\n              Forgot your password?\n            </div>\n            <Alert />\n          </div>\n          <div className=\"formBtnContainer\">\n            <input type=\"submit\" value=\"Login\" className=\"submitBtn\" />\n          </div>\n        </form>\n      ) : (\n        <div>\n          <form onSubmit={e => handlePasswordReset(e)}>\n            <input\n              className=\"registerFormEmail\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={forgotEmail}\n              onChange={e => setForgotEmail(e)}\n              required\n            />\n            <div\n              onClick={() => setPasswordResetForm(!passwordResetForm)}\n              className=\"forgotPasswordText\"\n            >\n              Back to sign in\n            </div>\n            <div className=\"formBtnContainer\">\n              <input\n                type=\"submit\"\n                value=\"Reset Password\"\n                className=\"submitBtn\"\n              />\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(SignInForm);\n"]},"metadata":{},"sourceType":"module"}