{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n})); // Redux\n\n\nconst mapStateToProps = state => ({\n  auth: state.Authenticate\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","mapStateToProps","state","Authenticate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAFc;AAGpB,KAAGC;AAHiB,CAAD,KAKnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACX,CAACH,eAAD,IAAoB,CAACC,OAArB,GACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALF,C,CAiBA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,IAAI,EAAEM,KAAK,CAACC;AADoB,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CAACS,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\n// Redux\nconst mapStateToProps = state => ({\n  auth: state.Authenticate\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}