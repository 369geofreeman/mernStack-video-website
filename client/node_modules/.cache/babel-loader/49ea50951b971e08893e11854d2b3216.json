{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/CategoryPlayer/CategoryPlayer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport Spinner from \"../../layout/PageLoadingLogo\"; // Redux\n\nimport { currentCategoryIndex } from \"../../store/actions/Index\"; // Helper functions\n// import categorySelect from \"../../assets/utils/categorySelect\";\n\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\"; // Components\n\nimport VideoTitleViewAll from \"../../components/VideoTitle/VIdeoTitleViewAll\";\nimport CategoryPlayerButtons from \"./CategoryPlayerButtons\";\nimport \"./CategoryPlayer.scss\";\n\nconst CategoryPlayer = ({\n  onResetCurrentCategoryIndex,\n  VideoIndex,\n  modalOpen,\n  // vidTitle,\n  categoryVideos: {\n    categoryVideos,\n    categoryLoading\n  }\n}) => {\n  // const categorySet = categorySelect(vidTitle);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const [videos] = useState(categoryVideos);\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n  useEffect(() => {\n    // setVideos(categorySet);\n    if (rightPress || dPress) !modalOpen && onResetCurrentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1); // eslint-disable-next-line;\n  }, [VideoIndex, rightPress, dPress, videoLen, onResetCurrentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) !modalOpen && onResetCurrentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1); // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, onResetCurrentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    onResetCurrentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetCurrentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  }; // let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  // let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n\n\n  let slides = videos.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(VideoTitleViewAll, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(CategoryPlayerButtons, {\n      nextIndex: nextIndex // to={`/categories/${vidTitle}/${videos[vidUrlIndexTo]._id}`}\n      ,\n      previousIndex: previousIndex // from={`/categories/${vidTitle}/${videos[vidUrlIndexFrom]._id}`}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: videos[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  });\n  console.log(\"HERE ARE THE VIDEOS\", videos.length);\n  return categoryLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"catergoryPlayerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, slides));\n}; // Redux Vars\n\n\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.categoryIndex,\n    vidTitle: state.VideoIndex.categoryTitle,\n    modalOpen: state.ModalOpen.modalOpen,\n    categoryVideos: state.Videos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetCurrentCategoryIndex: index => dispatch(currentCategoryIndex(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPlayer);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/CategoryPlayer/CategoryPlayer.js"],"names":["React","useState","useEffect","connect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","Spinner","currentCategoryIndex","useKeyPress","useWindowDimensions","VideoTitleViewAll","CategoryPlayerButtons","CategoryPlayer","onResetCurrentCategoryIndex","VideoIndex","modalOpen","categoryVideos","categoryLoading","width","height","videos","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","prevState","nextIndex","previousIndex","slides","map","slide","index","vidLink","title","category","categoryTag","backgroundColor","file","attributes","controlsList","console","log","mapStateToProps","state","categoryIndex","vidTitle","categoryTitle","ModalOpen","Videos","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport Spinner from \"../../layout/PageLoadingLogo\";\n// Redux\nimport { currentCategoryIndex } from \"../../store/actions/Index\";\n// Helper functions\n// import categorySelect from \"../../assets/utils/categorySelect\";\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\n// Components\nimport VideoTitleViewAll from \"../../components/VideoTitle/VIdeoTitleViewAll\";\nimport CategoryPlayerButtons from \"./CategoryPlayerButtons\";\nimport \"./CategoryPlayer.scss\";\n\nconst CategoryPlayer = ({\n  onResetCurrentCategoryIndex,\n  VideoIndex,\n  modalOpen,\n  // vidTitle,\n  categoryVideos: { categoryVideos, categoryLoading }\n}) => {\n  // const categorySet = categorySelect(vidTitle);\n  const { width, height } = useWindowDimensions();\n  const [videos] = useState(categoryVideos);\n  const [videoLen] = useState(videos.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  useEffect(() => {\n    // setVideos(categorySet);\n    if (rightPress || dPress)\n      !modalOpen &&\n        onResetCurrentCategoryIndex(\n          VideoIndex === videoLen ? 0 : VideoIndex + 1\n        );\n    // eslint-disable-next-line;\n  }, [\n    VideoIndex,\n    rightPress,\n    dPress,\n    videoLen,\n    onResetCurrentCategoryIndex,\n    modalOpen\n  ]);\n  useEffect(() => {\n    if (leftPress || aPress)\n      !modalOpen &&\n        onResetCurrentCategoryIndex(\n          VideoIndex === 0 ? videoLen : VideoIndex - 1\n        );\n    // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, onResetCurrentCategoryIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress)\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n  }, [spacePress, modalOpen]);\n\n  const nextIndex = () => {\n    onResetCurrentCategoryIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetCurrentCategoryIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  // let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  // let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  let slides = videos.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitleViewAll\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <CategoryPlayerButtons\n          nextIndex={nextIndex}\n          // to={`/categories/${vidTitle}/${videos[vidUrlIndexTo]._id}`}\n          previousIndex={previousIndex}\n          // from={`/categories/${vidTitle}/${videos[vidUrlIndexFrom]._id}`}\n        />\n        <ReactPlayer\n          url={videos[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  console.log(\"HERE ARE THE VIDEOS\", videos.length);\n\n  return categoryLoading ? (\n    <Spinner />\n  ) : (\n    <div className=\"catergoryPlayerContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n      >\n        {slides}\n      </AwesomeSlider>\n    </div>\n  );\n};\n\n// Redux Vars\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.categoryIndex,\n    vidTitle: state.VideoIndex.categoryTitle,\n    modalOpen: state.ModalOpen.modalOpen,\n    categoryVideos: state.Videos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetCurrentCategoryIndex: index => dispatch(currentCategoryIndex(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryPlayer);\n"]},"metadata":{},"sourceType":"module"}