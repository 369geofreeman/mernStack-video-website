{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ProfilePage/AccountSettings/AccountSettings.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\"; // Redux\n\nimport { deleteAccount, setAlert, logout } from \"../../../store/actions/Index\"; // Components\n\nimport Spinner from \"../../../layout/Spinner\";\nimport \"./AccountSettings.scss\"; // To Delete a profile bring in deleteAccount from actions/Index and wire that bitch up\n\nconst AccountSettings = ({\n  auth: {\n    user,\n    loading\n  },\n  deleteAccount,\n  setAlert,\n  logout\n}) => {\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [passwordUpdateLoading, setPasswordUpdateLoading] = useState(false);\n\n  const handleUpdatePassword = async e => {\n    e.preventDefault();\n    console.log(`Password updated for: ${user.email}`);\n    await setPasswordUpdateLoading(true);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    let body = await JSON.stringify({\n      email: user.email\n    });\n\n    try {\n      await axios.post(\"/api/auth/forgot_password\", body, config);\n      await setAlert(`Email sent to: ${user.email}`, \"success\");\n      await setPasswordUpdateLoading(false);\n      logout();\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(error.msg, \"danger\"));\n        await setPasswordUpdateLoading(false);\n      }\n    }\n  };\n\n  return loading && user === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"accountSettingsContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"accountImgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../../../assets/img/Hooks.png\"),\n    alt: \"\",\n    className: \"AccountHeaderImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    className: \"accountUserEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Welcome \", user && user.name), React.createElement(\"div\", {\n    className: \"accountBodyContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"acountTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"accountTitleContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"accountSavedVidsText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Collection:\"), React.createElement(\"h2\", {\n    className: \"accountSavedVidsTextRes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, user && user.savedVids.length === 1 ? `${user.savedVids.length} Clip` : `${user.savedVids.length} Clips`)), React.createElement(\"div\", {\n    className: \"accountTitleContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"accountSavedVidsText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Member since:\"), React.createElement(\"h2\", {\n    className: \"accountSavedVidsTextRes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, user.date)))), React.createElement(\"div\", {\n    className: \"accountChangePasswordContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, showChangePassword ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"openFormAccountContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"updatePasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Click the link below to update your password.\"), React.createElement(\"p\", {\n    className: \"updatePasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"An email will be sent for you to log in with your new password\"), React.createElement(\"p\", {\n    className: \"updatePasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"You will be logged out after clicking this link\"), React.createElement(\"div\", {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"accountChangeBtn\",\n    onClick: e => window.confirm(\"Are you sure you wish update your password?\") && handleUpdatePassword(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    className: \"accountChangeBtn\",\n    onClick: () => setShowChangePassword(!showChangePassword),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Cancel\")))) : React.createElement(\"button\", {\n    className: \"accountChangeBtn\",\n    onClick: () => setShowChangePassword(!showChangePassword),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Change Password\")), React.createElement(\"button\", {\n    className: \"deleteAccountBtn\",\n    disabled: showChangePassword,\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Delete account\"), React.createElement(\"div\", {\n    className: \"accountSpacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.Authenticate,\n  profile: state.Profile\n});\n\nexport default connect(mapStateToProps, {\n  deleteAccount,\n  setAlert,\n  logout\n})(AccountSettings); // import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import Moment from \"react-moment\";\n// // Redux\n// import { deleteAccount } from \"../../../store/actions/Index\";\n// // Components\n// import Spinner from \"../../../layout/Spinner\";\n// import \"./AccountSettings.scss\";\n// // To Delete a profile bring in deleteAccount from actions/Index and wire that bitch up\n// const AccountSettings = ({ auth: { user, loading }, deleteAccount }) => {\n//   const [showChangePassword, setShowChangePassword] = useState(false);\n//   return loading && user === null ? (\n//     <Spinner />\n//   ) : (\n//     <div className=\"accountSettingsContainer\">\n//       <div className=\"accountImgContainer\">\n//         <img\n//           src={require(\"../../../assets/img/Hooks.png\")}\n//           alt=\"\"\n//           className=\"AccountHeaderImg\"\n//         />\n//       </div>\n//       <h1 className=\"accountUserEmail\">Welcome {user && user.name}</h1>\n//       <div className=\"accountBodyContainer\">\n//         <div className=\"acountTitle\">\n//           <div className=\"accountTitleContainer\">\n//             <h2 className=\"accountSavedVidsText\">Collection:</h2>\n//             <h2 className=\"accountSavedVidsTextRes\">\n//               {user && user.savedVids.length === 1\n//                 ? `${user.savedVids.length} Clip`\n//                 : `${user.savedVids.length} Clips`}\n//             </h2>\n//           </div>\n//           <div className=\"accountTitleContainer\">\n//             <h2 className=\"accountSavedVidsText\">Member since:</h2>\n//             <h2 className=\"accountSavedVidsTextRes\">\n//               <Moment format=\"DD/MM/YYYY\">{user.date}</Moment>\n//             </h2>\n//           </div>\n//         </div>\n//         <div className=\"accountChangePasswordContainer\">\n//           {showChangePassword ? (\n//             <>\n//               <div className=\"openFormAccountContainer\">\n//                 <form className=\"accountPasswordFormContainer\">\n//                   <input\n//                     type=\"password\"\n//                     title=\"Enter current password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"Current Password\"\n//                   />\n//                   <input\n//                     type=\"password\"\n//                     title=\"Enter new password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"New Password\"\n//                   />\n//                   <input\n//                     type=\"password\"\n//                     title=\"Re-enter new password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"Re-enter New Password\"\n//                   />\n//                   <div\n//                     style={{\n//                       flexDirection: \"row\",\n//                       justifyContent: \"space-between\",\n//                     }}\n//                   >\n//                     <button className=\"accountChangeBtn\">Submit</button>\n//                     <button\n//                       className=\"accountChangeBtn\"\n//                       onClick={() => setShowChangePassword(!showChangePassword)}\n//                     >\n//                       Cancel\n//                     </button>\n//                   </div>\n//                   <div className=\"accountSpacer\" />\n//                 </form>\n//               </div>\n//             </>\n//           ) : (\n//             <button\n//               className=\"accountChangeBtn\"\n//               onClick={() => setShowChangePassword(!showChangePassword)}\n//             >\n//               Change Password\n//             </button>\n//           )}\n//         </div>\n//         <button\n//           className=\"deleteAccountBtn\"\n//           disabled={showChangePassword}\n//           onClick={() => deleteAccount()}\n//         >\n//           Delete account\n//         </button>\n//         <div className=\"accountSpacer\" />\n//       </div>\n//     </div>\n//   );\n// };\n// const mapStateToProps = (state) => ({\n//   auth: state.Authenticate,\n//   profile: state.Profile,\n// });\n// export default connect(mapStateToProps, { deleteAccount })(AccountSettings);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ProfilePage/AccountSettings/AccountSettings.js"],"names":["React","useState","connect","axios","Moment","deleteAccount","setAlert","logout","Spinner","AccountSettings","auth","user","loading","showChangePassword","setShowChangePassword","passwordUpdateLoading","setPasswordUpdateLoading","handleUpdatePassword","e","preventDefault","console","log","email","config","headers","body","JSON","stringify","post","err","errors","response","data","forEach","error","msg","require","name","savedVids","length","date","flexDirection","justifyContent","marginTop","window","confirm","mapStateToProps","state","Authenticate","profile","Profile"],"mappings":"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":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\n// Redux\nimport { deleteAccount, setAlert, logout } from \"../../../store/actions/Index\";\n// Components\nimport Spinner from \"../../../layout/Spinner\";\nimport \"./AccountSettings.scss\";\n\n// To Delete a profile bring in deleteAccount from actions/Index and wire that bitch up\n\nconst AccountSettings = ({\n  auth: { user, loading },\n  deleteAccount,\n  setAlert,\n  logout,\n}) => {\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [passwordUpdateLoading, setPasswordUpdateLoading] = useState(false);\n\n  const handleUpdatePassword = async (e) => {\n    e.preventDefault();\n    console.log(`Password updated for: ${user.email}`);\n\n    await setPasswordUpdateLoading(true);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let body = await JSON.stringify({ email: user.email });\n    try {\n      await axios.post(\"/api/auth/forgot_password\", body, config);\n      await setAlert(`Email sent to: ${user.email}`, \"success\");\n      await setPasswordUpdateLoading(false);\n      logout();\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => setAlert(error.msg, \"danger\"));\n        await setPasswordUpdateLoading(false);\n      }\n    }\n  };\n\n  return loading && user === null ? (\n    <Spinner />\n  ) : (\n    <div className=\"accountSettingsContainer\">\n      <div className=\"accountImgContainer\">\n        <img\n          src={require(\"../../../assets/img/Hooks.png\")}\n          alt=\"\"\n          className=\"AccountHeaderImg\"\n        />\n      </div>\n      <h1 className=\"accountUserEmail\">Welcome {user && user.name}</h1>\n      <div className=\"accountBodyContainer\">\n        <div className=\"acountTitle\">\n          <div className=\"accountTitleContainer\">\n            <h2 className=\"accountSavedVidsText\">Collection:</h2>\n            <h2 className=\"accountSavedVidsTextRes\">\n              {user && user.savedVids.length === 1\n                ? `${user.savedVids.length} Clip`\n                : `${user.savedVids.length} Clips`}\n            </h2>\n          </div>\n          <div className=\"accountTitleContainer\">\n            <h2 className=\"accountSavedVidsText\">Member since:</h2>\n            <h2 className=\"accountSavedVidsTextRes\">\n              <Moment format=\"DD/MM/YYYY\">{user.date}</Moment>\n            </h2>\n          </div>\n        </div>\n        <div className=\"accountChangePasswordContainer\">\n          {showChangePassword ? (\n            <>\n              <div className=\"openFormAccountContainer\">\n                <p className=\"updatePasswordText\">\n                  Click the link below to update your password.\n                </p>\n                <p className=\"updatePasswordText\">\n                  An email will be sent for you to log in with your new password\n                </p>\n                <p className=\"updatePasswordText\">\n                  You will be logged out after clicking this link\n                </p>\n                <div\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    marginTop: 20,\n                  }}\n                >\n                  <button\n                    className=\"accountChangeBtn\"\n                    onClick={(e) =>\n                      window.confirm(\n                        \"Are you sure you wish update your password?\"\n                      ) && handleUpdatePassword(e)\n                    }\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"accountChangeBtn\"\n                    onClick={() => setShowChangePassword(!showChangePassword)}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </>\n          ) : (\n            <button\n              className=\"accountChangeBtn\"\n              onClick={() => setShowChangePassword(!showChangePassword)}\n            >\n              Change Password\n            </button>\n          )}\n        </div>\n        <button\n          className=\"deleteAccountBtn\"\n          disabled={showChangePassword}\n          onClick={() => deleteAccount()}\n        >\n          Delete account\n        </button>\n        <div className=\"accountSpacer\" />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.Authenticate,\n  profile: state.Profile,\n});\n\nexport default connect(mapStateToProps, { deleteAccount, setAlert, logout })(\n  AccountSettings\n);\n\n// import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import Moment from \"react-moment\";\n// // Redux\n// import { deleteAccount } from \"../../../store/actions/Index\";\n// // Components\n// import Spinner from \"../../../layout/Spinner\";\n// import \"./AccountSettings.scss\";\n\n// // To Delete a profile bring in deleteAccount from actions/Index and wire that bitch up\n\n// const AccountSettings = ({ auth: { user, loading }, deleteAccount }) => {\n//   const [showChangePassword, setShowChangePassword] = useState(false);\n\n//   return loading && user === null ? (\n//     <Spinner />\n//   ) : (\n//     <div className=\"accountSettingsContainer\">\n//       <div className=\"accountImgContainer\">\n//         <img\n//           src={require(\"../../../assets/img/Hooks.png\")}\n//           alt=\"\"\n//           className=\"AccountHeaderImg\"\n//         />\n//       </div>\n//       <h1 className=\"accountUserEmail\">Welcome {user && user.name}</h1>\n//       <div className=\"accountBodyContainer\">\n//         <div className=\"acountTitle\">\n//           <div className=\"accountTitleContainer\">\n//             <h2 className=\"accountSavedVidsText\">Collection:</h2>\n//             <h2 className=\"accountSavedVidsTextRes\">\n//               {user && user.savedVids.length === 1\n//                 ? `${user.savedVids.length} Clip`\n//                 : `${user.savedVids.length} Clips`}\n//             </h2>\n//           </div>\n//           <div className=\"accountTitleContainer\">\n//             <h2 className=\"accountSavedVidsText\">Member since:</h2>\n//             <h2 className=\"accountSavedVidsTextRes\">\n//               <Moment format=\"DD/MM/YYYY\">{user.date}</Moment>\n//             </h2>\n//           </div>\n//         </div>\n//         <div className=\"accountChangePasswordContainer\">\n//           {showChangePassword ? (\n//             <>\n//               <div className=\"openFormAccountContainer\">\n//                 <form className=\"accountPasswordFormContainer\">\n//                   <input\n//                     type=\"password\"\n//                     title=\"Enter current password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"Current Password\"\n//                   />\n//                   <input\n//                     type=\"password\"\n//                     title=\"Enter new password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"New Password\"\n//                   />\n//                   <input\n//                     type=\"password\"\n//                     title=\"Re-enter new password\"\n//                     className=\"accountPasswordFormInput\"\n//                     placeholder=\"Re-enter New Password\"\n//                   />\n//                   <div\n//                     style={{\n//                       flexDirection: \"row\",\n//                       justifyContent: \"space-between\",\n//                     }}\n//                   >\n//                     <button className=\"accountChangeBtn\">Submit</button>\n//                     <button\n//                       className=\"accountChangeBtn\"\n//                       onClick={() => setShowChangePassword(!showChangePassword)}\n//                     >\n//                       Cancel\n//                     </button>\n//                   </div>\n//                   <div className=\"accountSpacer\" />\n//                 </form>\n//               </div>\n//             </>\n//           ) : (\n//             <button\n//               className=\"accountChangeBtn\"\n//               onClick={() => setShowChangePassword(!showChangePassword)}\n//             >\n//               Change Password\n//             </button>\n//           )}\n//         </div>\n//         <button\n//           className=\"deleteAccountBtn\"\n//           disabled={showChangePassword}\n//           onClick={() => deleteAccount()}\n//         >\n//           Delete account\n//         </button>\n//         <div className=\"accountSpacer\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.Authenticate,\n//   profile: state.Profile,\n// });\n\n// export default connect(mapStateToProps, { deleteAccount })(AccountSettings);\n"]},"metadata":{},"sourceType":"module"}