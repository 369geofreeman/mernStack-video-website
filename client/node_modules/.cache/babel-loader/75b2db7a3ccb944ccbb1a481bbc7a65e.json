{"ast":null,"code":"import axios from \"axios\";\nimport { GET_VIDEOS, VIDEOS_ERROR, ADD_SAVED_VID, PROFILE_ERROR, GET_CATEGORY_VIDEOS, RESET_CATEGORY_VIDEOS } from \"./ActionTypes\";\nimport { setAlert } from \"./Index\"; // Add saved Video into users array\n// export const addSavedVid = savedVid => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       }\n//     };\n//     const res = await axios.put(\"/api/users/savevid\", savedVid, config);\n//     dispatch({\n//       type: ADD_SAVED_VID,\n//       payload: res.data\n//     });\n//     dispatch(setAlert(\"Clip saved\", \"success\"));\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       playload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\nexport const addSavedVid = savedVid => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/users/savevid\");\n    dispatch({\n      type: ADD_SAVED_VID,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Clip saved\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete saved video from users array\n// Get all main videos\n\nexport const getSelectedVideos = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/videos\");\n    dispatch({\n      type: GET_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getCategoryVideos = category => async dispatch => {\n  try {\n    const res = await axios.get(`/api/categories/${category}`);\n    dispatch({\n      type: GET_CATEGORY_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const resetCategoryVideos = () => dispatch => {\n  dispatch({\n    type: RESET_CATEGORY_VIDEOS\n  });\n};","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/store/actions/Videos.js"],"names":["axios","GET_VIDEOS","VIDEOS_ERROR","ADD_SAVED_VID","PROFILE_ERROR","GET_CATEGORY_VIDEOS","RESET_CATEGORY_VIDEOS","setAlert","addSavedVid","savedVid","dispatch","res","put","type","payload","data","err","playload","msg","response","statusText","status","getSelectedVideos","get","getCategoryVideos","category","resetCategoryVideos"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,mBALF,EAMEC,qBANF,QAOO,eAPP;AAQA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACvD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,oBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,aADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACH,QAAQ,CAAC,YAAD,EAAe,SAAf,CAAT,CAAR;AACD,GATD,CASE,OAAOS,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,aADC;AAEPa,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEL,GAAG,CAACG,QAAJ,CAAaE;AAArD;AAFH,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMZ,QAAN,IAAkB;AACvD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACuB,GAAN,CAAU,aAAV,CAAlB;AAEAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,YADC;AAEPe,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEL,GAAG,CAACG,QAAJ,CAAaE;AAArD;AAFH,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMG,iBAAiB,GAAGC,QAAQ,IAAI,MAAMf,QAAN,IAAkB;AAC7D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACuB,GAAN,CAAW,mBAAkBE,QAAS,EAAtC,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,mBADC;AAEPS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,YADC;AAEPe,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEL,GAAG,CAACG,QAAJ,CAAaE;AAArD;AAFH,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMK,mBAAmB,GAAG,MAAMhB,QAAQ,IAAI;AACnDA,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEP;AADC,GAAD,CAAR;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\n\nimport {\n  GET_VIDEOS,\n  VIDEOS_ERROR,\n  ADD_SAVED_VID,\n  PROFILE_ERROR,\n  GET_CATEGORY_VIDEOS,\n  RESET_CATEGORY_VIDEOS\n} from \"./ActionTypes\";\nimport { setAlert } from \"./Index\";\n\n// Add saved Video into users array\n// export const addSavedVid = savedVid => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       }\n//     };\n\n//     const res = await axios.put(\"/api/users/savevid\", savedVid, config);\n//     dispatch({\n//       type: ADD_SAVED_VID,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert(\"Clip saved\", \"success\"));\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       playload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\nexport const addSavedVid = savedVid => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/users/savevid\");\n\n    dispatch({\n      type: ADD_SAVED_VID,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Clip saved\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete saved video from users array\n\n// Get all main videos\nexport const getSelectedVideos = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/videos\");\n\n    dispatch({\n      type: GET_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const getCategoryVideos = category => async dispatch => {\n  try {\n    const res = await axios.get(`/api/categories/${category}`);\n\n    dispatch({\n      type: GET_CATEGORY_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const resetCategoryVideos = () => dispatch => {\n  dispatch({\n    type: RESET_CATEGORY_VIDEOS\n  });\n};\n"]},"metadata":{},"sourceType":"module"}