{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport SearchModal from \"../containers/SearchModal/SearchModal\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PageLoadingLogo from \"../layout/PageLoadingLogo\";\nimport ResetPassword from \"../components/ResetPassword/ResetPassword\";\nimport { categoryTitle, currentCategoryIndex, getCategoryVideos, resetCategoryVideos } from \"../store/actions/Index\";\n\nconst Navigation = ({\n  isAuthenticated: {\n    isAuthenticated,\n    user\n  },\n  videos: {\n    loading,\n    categoryLoading,\n    categoryVideos\n  }\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background; // const [savedVideos, setSavedVideos] = useState([]);\n  // Start - Turn this into action to set category videos if not set\n  // useEffect(() => {\n  //   const category = location.pathname.match(\"/categories/\")\n  //     ? location.pathname.split(\"/\")[2]\n  //     : \"\";\n  //   const categoryTag = [...category].filter(y => y !== \"_\").join(\"\");\n  //   if (categoryVideos.length === 0) {\n  //     // return categoryTitle(category);\n  //     getCategoryVideos(categoryTag);\n  //   }\n  // }, [categoryVideos.length, location.pathname]);\n  // End\n  // useEffect(() => {\n  //   if (user) setSavedVideos(user.savedVids);\n  // }, [setSavedVideos, user]);\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location.pathname.match(\"/saved\") ? location : background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/play/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: categoryLoading === false ? CategoryPlayer : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/:userId/profile\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: SavedVidsSlider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: SearchModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  } else {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/play/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: ToggleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: categoryLoading === false ? CategoryPlayer : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/reset_password\",\n      component: ResetPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: loading === false ? HomePage : PageLoadingLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: Modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: SearchModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n  return routes;\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate,\n    videos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  categoryTitle,\n  currentCategoryIndex,\n  getCategoryVideos,\n  resetCategoryVideos\n})(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/navigation/Navigation.js"],"names":["React","Switch","Route","useLocation","connect","HomePage","SearchModal","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","PageLoadingLogo","ResetPassword","categoryTitle","currentCategoryIndex","getCategoryVideos","resetCategoryVideos","Navigation","isAuthenticated","user","videos","loading","categoryLoading","categoryVideos","location","background","state","routes","pathname","match","mapStateToProps","Authenticate","Videos"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"../containers/HomePage/HomePage\";\nimport SearchModal from \"../containers/SearchModal/SearchModal\";\nimport CategoryPlayer from \"../containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"../containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"../components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"../components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"../components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PageLoadingLogo from \"../layout/PageLoadingLogo\";\nimport ResetPassword from \"../components/ResetPassword/ResetPassword\";\n\nimport {\n  categoryTitle,\n  currentCategoryIndex,\n  getCategoryVideos,\n  resetCategoryVideos\n} from \"../store/actions/Index\";\n\nconst Navigation = ({\n  isAuthenticated: { isAuthenticated, user },\n  videos: { loading, categoryLoading, categoryVideos }\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  // const [savedVideos, setSavedVideos] = useState([]);\n\n  // Start - Turn this into action to set category videos if not set\n\n  // useEffect(() => {\n  //   const category = location.pathname.match(\"/categories/\")\n  //     ? location.pathname.split(\"/\")[2]\n  //     : \"\";\n  //   const categoryTag = [...category].filter(y => y !== \"_\").join(\"\");\n  //   if (categoryVideos.length === 0) {\n  //     // return categoryTitle(category);\n  //     getCategoryVideos(categoryTag);\n  //   }\n  // }, [categoryVideos.length, location.pathname]);\n\n  // End\n\n  // useEffect(() => {\n  //   if (user) setSavedVideos(user.savedVids);\n  // }, [setSavedVideos, user]);\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = (\n      <div>\n        <Switch\n          location={location.pathname.match(\"/saved\") ? location : background}\n        >\n          <Route\n            exact\n            path=\"/\"\n            component={loading === false ? HomePage : PageLoadingLogo}\n          />\n          <Route exact path=\"/play/:vidId\" component={HomePage} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={\n              categoryLoading === false ? CategoryPlayer : PageLoadingLogo\n            }\n          />\n          <PrivateRoute path=\"/:userId/profile\" component={ProfilePage} />\n          <PrivateRoute\n            exact\n            path=\"/saved/:vidId\"\n            component={SavedVidsSlider}\n          />\n\n          <Route component={loading === false ? HomePage : PageLoadingLogo} />\n        </Switch>\n        {background && (\n          <>\n            <PrivateRoute exact path=\"/saved/:vidId\" component={ProfilePage} />\n            <Route exact path=\"/categories\" component={SearchModal} />\n          </>\n        )}\n      </div>\n    );\n  } else {\n    routes = (\n      <div>\n        <Switch location={background}>\n          <Route\n            exact\n            path=\"/\"\n            component={loading === false ? HomePage : PageLoadingLogo}\n          />\n          <Route exact path=\"/play/:vidId\" component={HomePage} />\n          <Route exact path=\"/auth\" component={ToggleSignIn} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={\n              categoryLoading === false ? CategoryPlayer : PageLoadingLogo\n            }\n          />\n          <Route exact path=\"/reset_password\" component={ResetPassword} />\n          <Route component={loading === false ? HomePage : PageLoadingLogo} />\n        </Switch>\n        {background && (\n          <>\n            <Route exact path=\"/auth\" component={Modal} />\n            <Route exact path=\"/categories\" component={SearchModal} />\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return routes;\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate,\n    videos: state.Videos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    categoryTitle,\n    currentCategoryIndex,\n    getCategoryVideos,\n    resetCategoryVideos\n  }\n)(Navigation);\n"]},"metadata":{},"sourceType":"module"}