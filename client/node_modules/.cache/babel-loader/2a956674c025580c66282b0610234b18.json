{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\n\nconst Navigation = ({\n  isAuthenticated\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  let routes;\n\n  if (isAuthenticated) {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location || background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:vidId\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/categories/:categoryId/:vidId\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(CategoryPlayer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ProfilePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/saved/:vidId\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(SavedVidsSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/saved/:vidId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ProfilePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/categories\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(CategoriesOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  } else {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: background || location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/:vidId/\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ToggleSignIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/categories/:categoryId/:vidId\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CategoryPlayer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CategoriesOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n  return routes;\n}; //  Redux mapping\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js"],"names":["React","Switch","Route","useLocation","connect","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","Navigation","isAuthenticated","location","background","state","routes","mapStateToProps","Authenticate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\n\nconst Navigation = ({ isAuthenticated }) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = (\n      <div>\n        <Switch location={location || background}>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/:vidId\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/categories/:categoryId/:vidId\" exact>\n            <CategoryPlayer />\n          </Route>\n          <Route path=\"/profile\">\n            <ProfilePage />\n          </Route>\n          <Route path=\"/saved/:vidId\" exact>\n            <SavedVidsSlider />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        {background && (\n          <>\n            <Route path=\"/saved/:vidId\">\n              <ProfilePage />\n            </Route>\n            <Route path=\"/categories\" exact>\n              <CategoriesOverlay />\n            </Route>\n          </>\n        )}\n      </div>\n    );\n  } else {\n    routes = (\n      <div>\n        <Switch location={background || location}>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/:vidId/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/auth\">\n            <ToggleSignIn />\n          </Route>\n          <Route path=\"/categories/:categoryId/:vidId\" exact>\n            <CategoryPlayer />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        {background && (\n          <>\n            <Route path=\"/auth\">\n              <Modal />\n            </Route>\n            <Route path=\"/categories\">\n              <CategoriesOverlay />\n            </Route>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return routes;\n};\n\n//  Redux mapping\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}