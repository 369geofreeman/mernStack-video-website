{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\"; // MyComponenets\n\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\"; // Redux vars\n\nimport { mouseMoving, mouseNotMoving, currentIndex } from \"../../store/actions/Index\"; // Dummy data ( DUMMY_DATA_NSFW )\n// import { DUMMY_DATA_SFW as DUMMY_DATA } from \"../../assets/dummyData/videos\";\n\nimport jData from \"../../assets/dummyData/categoryVids/AllCategories.json\"; // Helper functions\n\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\nimport setVideoIndex from \"../../assets/utils/setVideoIndex\"; // Styles\n\nimport \"./HomePage.scss\";\n\nconst HomePage = props => {\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [videos] = useState(jData);\n  const [videoPlaying, setVideoPlaying] = useState(true);\n  const [videoLen] = useState(jData.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n  const {\n    onResetCurrentIndex,\n    VideoIndexRedux,\n    modalOpen\n  } = props; // Set the Video index from URL\n\n  let VideoIndex = 0;\n  setVideoIndex(videos, +window.location.href.split(\"/\")[3], VideoIndexRedux); // if (window.location.href.split(\"/\")[3]) {\n  //   for (let i = 0; i < videos.length; i++) {\n  //     if (videos[i]._id === +window.location.href.split(\"/\")[3]) VideoIndex = i;\n  //   }\n  // } else {\n  //   VideoIndex = VideoIndexRedux;\n  // }\n  // Assign keybord to video controlls\n\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && onResetCurrentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    } // eslint-disable-next-line\n\n  }, [rightPress, dPress, videoLen, onResetCurrentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && onResetCurrentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    } // eslint-disable-next-line\n\n  }, [leftPress, aPress, videoLen, onResetCurrentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]); // Set video Controlls\n\n  const nextIndex = () => {\n    onResetCurrentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetCurrentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  const onVideoPlaying = () => {\n    setVideoPlaying(true);\n    setSmallHeader();\n  };\n\n  const onVideoPaused = () => {\n    setVideoPlaying(false);\n    setLargeHeader();\n  }; // Set if mouse over header\n\n\n  const smallHeaderMouseOverBody = () => {\n    if (videoPlaying) {\n      setSmallHeader();\n    } else {\n      setLargeHeader();\n    }\n  };\n\n  const setSmallHeader = () => {\n    props.onMouseNotMoving();\n  };\n\n  const setLargeHeader = () => {\n    props.onMouseMoving();\n  };\n\n  let slides = videos.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(VideoTitle, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: videos[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      onPlay: onVideoPlaying,\n      onPause: onVideoPaused,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  });\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  return React.createElement(\"div\", {\n    onMouseMove: smallHeaderMouseOverBody,\n    className: \"mainPageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, slides), React.createElement(HomePageButtons, {\n    nextIndex: nextIndex,\n    to: `/${videos[vidUrlIndexTo]._id}`,\n    previousIndex: previousIndex,\n    from: `/${videos[vidUrlIndexFrom]._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }));\n}; //  Redux mapping\n\n\nconst mapStateToProps = state => {\n  return {\n    mouseMoving: state.MouseMoving.mouseMoving,\n    VideoIndexRedux: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMouseMoving: () => dispatch(mouseMoving()),\n    onMouseNotMoving: () => dispatch(mouseNotMoving()),\n    onResetCurrentIndex: index => dispatch(currentIndex(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js"],"names":["React","useState","useEffect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","connect","HomePageButtons","VideoTitle","mouseMoving","mouseNotMoving","currentIndex","jData","useKeyPress","useWindowDimensions","setVideoIndex","HomePage","props","height","width","videos","videoPlaying","setVideoPlaying","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","onResetCurrentIndex","VideoIndexRedux","modalOpen","VideoIndex","window","location","href","split","prevState","nextIndex","previousIndex","onVideoPlaying","setSmallHeader","onVideoPaused","setLargeHeader","smallHeaderMouseOverBody","onMouseNotMoving","onMouseMoving","slides","map","slide","index","vidLink","title","category","categoryTag","backgroundColor","file","attributes","controlsList","vidUrlIndexTo","vidUrlIndexFrom","_id","mapStateToProps","state","MouseMoving","ModalOpen","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\";\n\n// MyComponenets\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\";\n// Redux vars\nimport {\n  mouseMoving,\n  mouseNotMoving,\n  currentIndex\n} from \"../../store/actions/Index\";\n// Dummy data ( DUMMY_DATA_NSFW )\n// import { DUMMY_DATA_SFW as DUMMY_DATA } from \"../../assets/dummyData/videos\";\nimport jData from \"../../assets/dummyData/categoryVids/AllCategories.json\";\n// Helper functions\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\nimport setVideoIndex from \"../../assets/utils/setVideoIndex\";\n// Styles\nimport \"./HomePage.scss\";\n\nconst HomePage = props => {\n  const { height, width } = useWindowDimensions();\n  const [videos] = useState(jData);\n  const [videoPlaying, setVideoPlaying] = useState(true);\n  const [videoLen] = useState(jData.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  const { onResetCurrentIndex, VideoIndexRedux, modalOpen } = props;\n\n  // Set the Video index from URL\n  let VideoIndex = 0;\n  setVideoIndex(videos, +window.location.href.split(\"/\")[3], VideoIndexRedux);\n\n  // if (window.location.href.split(\"/\")[3]) {\n  //   for (let i = 0; i < videos.length; i++) {\n  //     if (videos[i]._id === +window.location.href.split(\"/\")[3]) VideoIndex = i;\n  //   }\n  // } else {\n  //   VideoIndex = VideoIndexRedux;\n  // }\n\n  // Assign keybord to video controlls\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen &&\n        onResetCurrentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    }\n    // eslint-disable-next-line\n  }, [rightPress, dPress, videoLen, onResetCurrentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen &&\n        onResetCurrentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    }\n    // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, onResetCurrentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]);\n\n  // Set video Controlls\n  const nextIndex = () => {\n    onResetCurrentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    onResetCurrentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  const onVideoPlaying = () => {\n    setVideoPlaying(true);\n    setSmallHeader();\n  };\n\n  const onVideoPaused = () => {\n    setVideoPlaying(false);\n    setLargeHeader();\n  };\n\n  // Set if mouse over header\n  const smallHeaderMouseOverBody = () => {\n    if (videoPlaying) {\n      setSmallHeader();\n    } else {\n      setLargeHeader();\n    }\n  };\n\n  const setSmallHeader = () => {\n    props.onMouseNotMoving();\n  };\n  const setLargeHeader = () => {\n    props.onMouseMoving();\n  };\n\n  let slides = videos.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitle\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <ReactPlayer\n          url={videos[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          onPlay={onVideoPlaying}\n          onPause={onVideoPaused}\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  return (\n    <div onMouseMove={smallHeaderMouseOverBody} className=\"mainPageContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n      >\n        {slides}\n      </AwesomeSlider>\n      <HomePageButtons\n        nextIndex={nextIndex}\n        to={`/${videos[vidUrlIndexTo]._id}`}\n        previousIndex={previousIndex}\n        from={`/${videos[vidUrlIndexFrom]._id}`}\n      />\n    </div>\n  );\n};\n\n//  Redux mapping\nconst mapStateToProps = state => {\n  return {\n    mouseMoving: state.MouseMoving.mouseMoving,\n    VideoIndexRedux: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMouseMoving: () => dispatch(mouseMoving()),\n    onMouseNotMoving: () => dispatch(mouseNotMoving()),\n    onResetCurrentIndex: index => dispatch(currentIndex(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}