{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\"; // redux vars\n\nimport { logIn } from \"../../../../store/actions/Index\"; // My components\n\nimport SubmitBtn from \"../SubmitBtn/SubmitBtn\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = props => {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n\n    if (!email.includes(\"@\")) {\n      emailError = \"Invalid email\";\n    }\n\n    if (!password) {\n      passwordError = \"Incorrect password\";\n    }\n\n    if (emailError || passwordError) {\n      setEmailError(emailError);\n      setPasswordError(passwordError);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n\n    if (isValid) {\n      setEmail(\"\");\n      setPassword(\"\");\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      props.onLogIn();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"loginFormError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, emailError), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    placeholder: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"loginFormError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, passwordError)), React.createElement(SubmitBtn, {\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}; //  Redux mapping\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogIn: () => dispatch(logIn())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignInForm);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js"],"names":["React","useState","connect","logIn","SubmitBtn","SignInForm","props","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","validate","includes","handleChange","e","target","value","handleSubmit","preventDefault","isValid","onLogIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n// redux vars\nimport { logIn } from \"../../../../store/actions/Index\";\n// My components\nimport SubmitBtn from \"../SubmitBtn/SubmitBtn\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = props => {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n    if (!email.includes(\"@\")) {\n      emailError = \"Invalid email\";\n    }\n    if (!password) {\n      passwordError = \"Incorrect password\";\n    }\n    if (emailError || passwordError) {\n      setEmailError(emailError);\n      setPasswordError(passwordError);\n      return false;\n    }\n    return true;\n  };\n\n  const handleChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (isValid) {\n      setEmail(\"\");\n      setPassword(\"\");\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      props.onLogIn();\n    }\n  };\n\n  return (\n    <div className=\"registerFormContainer\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            className=\"registerFormEmail\"\n            placeholder=\"Email\"\n            type=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"loginFormError\">{emailError}</div>\n        <div>\n          <input\n            className=\"registerFormEmail\"\n            placeholder=\"Password\"\n            value={password}\n            type=\"password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n          <div className=\"loginFormError\">{passwordError}</div>\n        </div>\n        <SubmitBtn handleSubmit={handleSubmit} />\n      </form>\n    </div>\n  );\n};\n\n//  Redux mapping\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogIn: () => dispatch(logIn())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignInForm)\n"]},"metadata":{},"sourceType":"module"}