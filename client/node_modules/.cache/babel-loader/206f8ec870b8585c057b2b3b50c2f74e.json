{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\"; // redux\n\nimport { login, setAlert } from \"../../../../store/actions/Index\"; // components\n\nimport Alert from \"../../../../layout/Alert/Alert\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = ({\n  login,\n  setAlert\n}) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    forgottenEmail: \"\"\n  });\n  const [passwordResetForm, setPasswordResetForm] = useState(false);\n  const {\n    email,\n    password,\n    forgottenEmail\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await login(email, password);\n  };\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    let body = await JSON.stringify({\n      email: forgottenEmail\n    });\n\n    try {\n      axios.post(\"/api/auth/forgot_password\", body, config);\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(error.msg, \"danger\"));\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, !passwordResetForm ? React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: () => setPasswordResetForm(!passwordResetForm),\n    className: \"forgotPasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Forgot your password?\"), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"formBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"submitBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handlePasswordReset(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"registerFormEmail\",\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"forgottenEmail\",\n    value: forgottenEmail,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: () => setPasswordResetForm(!passwordResetForm),\n    className: \"forgotPasswordText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Back to sign in\"), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Reset Password\",\n    className: \"submitBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })))));\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  setAlert\n})(SignInForm);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoginModal/RegisterForm/SignInForm/SignInForm.js"],"names":["React","useState","axios","connect","login","setAlert","Alert","SignInForm","formData","setFormData","email","password","forgottenEmail","passwordResetForm","setPasswordResetForm","onChange","e","target","name","value","onSubmit","preventDefault","handlePasswordReset","config","headers","body","JSON","stringify","post","err","errors","response","data","forEach","error","msg","mapStateToProps","state","isAuthenticated","Authenticate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// redux\nimport { login, setAlert } from \"../../../../store/actions/Index\";\n// components\nimport Alert from \"../../../../layout/Alert/Alert\";\nimport \"./SignInForm.scss\";\n\nconst SignInForm = ({ login, setAlert }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    forgottenEmail: \"\"\n  });\n  const [passwordResetForm, setPasswordResetForm] = useState(false);\n\n  const { email, password, forgottenEmail } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await login(email, password);\n  };\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    let body = await JSON.stringify({ email: forgottenEmail });\n    try {\n      axios.post(\"/api/auth/forgot_password\", body, config);\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(error.msg, \"danger\"));\n      }\n    }\n  };\n\n  return (\n    <div className=\"registerFormContainer\">\n      {!passwordResetForm ? (\n        <form onSubmit={e => onSubmit(e)}>\n          <div>\n            <input\n              className=\"registerFormEmail\"\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div>\n            <input\n              className=\"registerFormEmail\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              minLength=\"6\"\n              value={password}\n              onChange={e => onChange(e)}\n              required\n            />\n            <div\n              onClick={() => setPasswordResetForm(!passwordResetForm)}\n              className=\"forgotPasswordText\"\n            >\n              Forgot your password?\n            </div>\n            <Alert />\n          </div>\n          <div className=\"formBtnContainer\">\n            <input type=\"submit\" value=\"Login\" className=\"submitBtn\" />\n          </div>\n        </form>\n      ) : (\n        <div>\n          <form onSubmit={e => handlePasswordReset(e)}>\n            <input\n              className=\"registerFormEmail\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"forgottenEmail\"\n              value={forgottenEmail}\n              onChange={e => onChange(e)}\n              required\n            />\n            <div\n              onClick={() => setPasswordResetForm(!passwordResetForm)}\n              className=\"forgotPasswordText\"\n            >\n              Back to sign in\n            </div>\n            <Alert />\n            <div className=\"formBtnContainer\">\n              <input\n                type=\"submit\"\n                value=\"Reset Password\"\n                className=\"submitBtn\"\n              />\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login, setAlert }\n)(SignInForm);\n"]},"metadata":{},"sourceType":"module"}