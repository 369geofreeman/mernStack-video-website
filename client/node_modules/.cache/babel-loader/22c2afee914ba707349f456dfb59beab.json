{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = ({\n  isAuthenticated\n}) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  let routes;\n\n  if (isAuthenticated) {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location || background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: CategoryPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/:userId/profile\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/saved/:vidId\",\n      component: SavedVidsSlider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/saved/:vidId\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  } else {\n    routes = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: location || background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:vidId\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: ToggleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories/:categoryId/:vidId\",\n      component: CategoryPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      path: \"/auth\",\n      component: Modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/categories\",\n      component: CategoriesOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n  return routes;\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation); // import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n//   let routes;\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n//   return routes;\n// };\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n// export default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js"],"names":["React","Switch","Route","useLocation","Redirect","connect","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","Navigation","isAuthenticated","location","background","state","routes","mapStateToProps","Authenticate"],"mappings":"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AArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgC,MAAA,SAAS,EAAEL,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbJ,CADF;AAqBD;;AAED,SAAOY,MAAP;AACD,CArDD,C,CAuDA;;;AACA,MAAMC,eAAe,GAAGF,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACG,YAAN,CAAmBN;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACe,eAAD,CAAP,CAAyBN,UAAzB,CAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = ({ isAuthenticated }) => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n\n  let routes;\n\n  if (isAuthenticated) {\n    routes = (\n      <div>\n        <Switch location={location || background}>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/:vidId\" component={HomePage} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={CategoryPlayer}\n          />\n          <PrivateRoute path=\"/:userId/profile\" component={ProfilePage} />\n          <PrivateRoute path=\"/saved/:vidId\" component={SavedVidsSlider} />\n        </Switch>\n        {background && (\n          <>\n            <PrivateRoute exact path=\"/saved/:vidId\" component={ProfilePage} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  } else {\n    routes = (\n      <div>\n        <Switch location={location || background}>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/:vidId\" component={HomePage} />\n          <Route exact path=\"/auth\" component={ToggleSignIn} />\n          <Route\n            exact\n            path=\"/categories/:categoryId/:vidId\"\n            component={CategoryPlayer}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n        {background && (\n          <>\n            <Route exact path=\"/auth\" component={Modal} />\n            <Route exact path=\"/categories\" component={CategoriesOverlay} />\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return routes;\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.Authenticate.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n\n// import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n\n//   let routes;\n\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n\n//   return routes;\n// };\n\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n\n// export default connect(mapStateToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}