{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ResetPassword/ResetPassword.js\";\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Lottie from \"react-lottie\"; // Redux\n\nimport { setAlert } from \"../../store/actions/Index\"; // Comoponets\n\nimport Alert from \"../../layout/Alert/Alert\";\nimport SignInForm from \"../LoginModal/RegisterForm/SignInForm/SignInForm\";\nimport * as loadingLogo from \"../../assets/logos/page-loading.json\";\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = ({\n  match,\n  setAlert\n}) => {\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [emailLoading, setEmailLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    password: \"\",\n    passwordMatch: \"\"\n  });\n  const {\n    password,\n    passwordMatch\n  } = formData;\n  const animation = useRef(null);\n  const defaultOptions = {\n    loop: true,\n    animationData: loadingLogo.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setEmailLoading(true);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password === passwordMatch) {\n      let body = await JSON.stringify({\n        password: password,\n        token: match.params.token\n      });\n\n      try {\n        await axios.post(\"/api/auth/reset_password/:token\", body, config);\n        await setEmailLoading(false);\n        setFormData({ ...formData,\n          password: \"\",\n          passwordMatch: \"\"\n        });\n        setAlert(`Password updated`, \"success\");\n        setPasswordUpdated(true);\n      } catch (err) {\n        const errors = err.response.data.errors;\n        await setEmailLoading(false);\n\n        if (errors) {\n          errors.forEach(error => setAlert(error.msg, \"danger\"));\n          await setEmailLoading(false);\n        }\n      }\n\n      await setEmailLoading(false);\n    } else {\n      await setAlert(`Passwords do not match`, \"danger\");\n      await setEmailLoading(false);\n    }\n\n    await setEmailLoading(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"resetFormPageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    className: \"accountPasswordPageFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, passwordUpdated ? React.createElement(React.Fragment, null, React.createElement(Redirect, {\n    to: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \";\") : React.createElement(React.Fragment, null, \" \", React.createElement(\"h2\", {\n    className: \"passwordPageTitleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Enter your new password below\"), emailLoading ? React.createElement(Lottie, {\n    options: defaultOptions,\n    height: 200,\n    width: 200,\n    ref: animation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    type: \"password\",\n    title: \"Enter new password\",\n    value: password,\n    onChange: e => onChange(e),\n    name: \"password\",\n    className: \"accountPasswordPageFormInput\",\n    placeholder: \"New Password\",\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    title: \"Re-enter new password\",\n    value: passwordMatch,\n    onChange: e => onChange(e),\n    name: \"passwordMatch\",\n    className: \"accountPasswordPageFormInput\",\n    placeholder: \"Re-enter New Password\",\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"resetPasswordPageBtn\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })))));\n};\n\nexport default connect(null, {\n  setAlert\n})(ResetPassword);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ResetPassword/ResetPassword.js"],"names":["React","useState","useRef","axios","connect","Redirect","Lottie","setAlert","Alert","SignInForm","loadingLogo","ResetPassword","match","passwordUpdated","setPasswordUpdated","emailLoading","setEmailLoading","formData","setFormData","password","passwordMatch","animation","defaultOptions","loop","animationData","default","rendererSettings","preserveAspectRatio","onChange","e","target","name","value","onSubmit","preventDefault","config","headers","body","JSON","stringify","token","params","post","err","errors","response","data","forEach","error","msg"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Lottie from \"react-lottie\";\n// Redux\nimport { setAlert } from \"../../store/actions/Index\";\n// Comoponets\nimport Alert from \"../../layout/Alert/Alert\";\nimport SignInForm from \"../LoginModal/RegisterForm/SignInForm/SignInForm\";\nimport * as loadingLogo from \"../../assets/logos/page-loading.json\";\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = ({ match, setAlert }) => {\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [emailLoading, setEmailLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    password: \"\",\n    passwordMatch: \"\",\n  });\n  const { password, passwordMatch } = formData;\n  const animation = useRef(null);\n\n  const defaultOptions = {\n    loop: true,\n    animationData: loadingLogo.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setEmailLoading(true);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password === passwordMatch) {\n      let body = await JSON.stringify({\n        password: password,\n        token: match.params.token,\n      });\n      try {\n        await axios.post(\"/api/auth/reset_password/:token\", body, config);\n        await setEmailLoading(false);\n        setFormData({ ...formData, password: \"\", passwordMatch: \"\" });\n        setAlert(`Password updated`, \"success\");\n        setPasswordUpdated(true);\n      } catch (err) {\n        const errors = err.response.data.errors;\n        await setEmailLoading(false);\n        if (errors) {\n          errors.forEach((error) => setAlert(error.msg, \"danger\"));\n          await setEmailLoading(false);\n        }\n      }\n      await setEmailLoading(false);\n    } else {\n      await setAlert(`Passwords do not match`, \"danger\");\n      await setEmailLoading(false);\n    }\n    await setEmailLoading(false);\n  };\n\n  return (\n    <div className=\"resetFormPageContainer\">\n      <form\n        onSubmit={(e) => onSubmit(e)}\n        className=\"accountPasswordPageFormContainer\"\n      >\n        {passwordUpdated ? (\n          <>\n            <Redirect to=\"/auth\" />;\n          </>\n        ) : (\n          <>\n            {\" \"}\n            <h2 className=\"passwordPageTitleText\">\n              Enter your new password below\n            </h2>\n            {emailLoading ? (\n              <Lottie\n                options={defaultOptions}\n                height={200}\n                width={200}\n                ref={animation}\n              />\n            ) : (\n              <>\n                <input\n                  type=\"password\"\n                  title=\"Enter new password\"\n                  value={password}\n                  onChange={(e) => onChange(e)}\n                  name=\"password\"\n                  className=\"accountPasswordPageFormInput\"\n                  placeholder=\"New Password\"\n                  minLength=\"6\"\n                />\n                <input\n                  type=\"password\"\n                  title=\"Re-enter new password\"\n                  value={passwordMatch}\n                  onChange={(e) => onChange(e)}\n                  name=\"passwordMatch\"\n                  className=\"accountPasswordPageFormInput\"\n                  placeholder=\"Re-enter New Password\"\n                  minLength=\"6\"\n                />\n                <input\n                  type=\"submit\"\n                  className=\"resetPasswordPageBtn\"\n                  value=\"Submit\"\n                />\n                <Alert />\n              </>\n            )}\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default connect(null, { setAlert })(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}