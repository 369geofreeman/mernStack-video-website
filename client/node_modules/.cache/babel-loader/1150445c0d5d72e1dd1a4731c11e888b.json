{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./Index\";\nimport { LOG_IN, LOG_OUT, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./ActionTypes\";\nimport setAuthToken from \"../../assets/utils/setAuthToken\"; // Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Log user in (DELETE)\n\nexport const logIn = () => {\n  return {\n    type: LOG_IN\n  };\n}; // Log user out (DELETE)\n\nexport const logOut = () => {\n  return {\n    type: LOG_OUT\n  };\n}; // Register a user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/store/actions/Authenticate.js"],"names":["axios","setAlert","LOG_IN","LOG_OUT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","logIn","logOut","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,UANF,QAOO,eAPP;AAQA,OAAOC,YAAP,MAAyB,iCAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,UAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD;AACF,CAjBM,C,CAmBP;;AACA,OAAO,MAAMY,KAAK,GAAG,MAAM;AACzB,SAAO;AACLJ,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CAJM,C,CAKP;;AACA,OAAO,MAAMkB,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLL,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMkB,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMd,QAAN,IAAkB;AACvE,QAAMe,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMb,KAAK,CAAC8B,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,gBADC;AAEPY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIxB,QAAQ,CAACT,QAAQ,CAACiC,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDzB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD;AACF,CA3BM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./Index\";\nimport {\n  LOG_IN,\n  LOG_OUT,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR\n} from \"./ActionTypes\";\nimport setAuthToken from \"../../assets/utils/setAuthToken\";\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Log user in (DELETE)\nexport const logIn = () => {\n  return {\n    type: LOG_IN\n  };\n};\n// Log user out (DELETE)\nexport const logOut = () => {\n  return {\n    type: LOG_OUT\n  };\n};\n\n// Register a user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}