{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoggedInNavState/LoggedInNav.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport ReactTooltip from \"react-tooltip\"; // Redux\n\nimport { addSavedVid, loadUser, delSavedVid } from \"../../store/actions/Index\"; // Icons\n\nimport clipped from \"../../assets/img/clipped.png\";\nimport unClipped from \"../../assets/img/unClipped.png\";\nimport collection2 from \"../../assets/img/pornFolderIcon.png\";\nimport \"./LoggedInNav.scss\";\n\nconst LoggedInNav = ({\n  vidIndex,\n  categoryIndex,\n  currentVideos: {\n    videos\n  },\n  categoryVideos: {\n    categoryVideos\n  },\n  auth: {\n    user\n  },\n  addSavedVid,\n  delSavedVid\n}) => {\n  const location = useLocation();\n  const [savedVideos, setSavedVideos] = useState([]);\n  const [currentSavedVid, setCurrentSavedVid] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const {\n    x\n  } = useSpring({\n    from: {\n      x: 0\n    },\n    x: !liked ? 0.5 : 0,\n    config: {\n      duration: 300\n    }\n  });\n  useEffect(() => {\n    if (user) setSavedVideos(user.savedVids);\n  }, [setSavedVideos, user]); // Check to see if video liked\n\n  useEffect(() => {\n    if (location.pathname.match(\"/categories/\")) {\n      categoryVideos.length > 0 && savedVideos && savedVideos.length > 0 && savedVideos.map(vid => {\n        if (vid.vidLink === categoryVideos[categoryIndex].vidLink) {\n          setCurrentSavedVid(vid._id);\n          return setTimeout(() => setLiked(true), 50);\n        } else {\n          return setLiked(false);\n        }\n      });\n    } else {\n      videos.length > 0 && savedVideos && savedVideos.length > 0 && savedVideos.map(vid => {\n        if (vid.vidLink === videos[vidIndex].vidLink) {\n          setCurrentSavedVid(vid._id);\n          return setTimeout(() => setLiked(true), 50);\n        } else {\n          return setLiked(false);\n        }\n      });\n    }\n  }, [setLiked, vidIndex, videos, savedVideos, categoryIndex, categoryVideos, location.pathname]); // Like / unlike video\n\n  const onLiked = async () => {\n    if (location.pathname.match(\"/categories/\")) {\n      if (liked) {\n        await delSavedVid(currentSavedVid);\n        setLiked(!liked);\n      } else {\n        await addSavedVid(categoryVideos[categoryIndex]);\n        loadUser();\n        setLiked(!liked);\n      }\n    } else {\n      if (liked) {\n        await delSavedVid(currentSavedVid);\n        setLiked(!liked);\n      } else {\n        await addSavedVid(videos[vidIndex]);\n        loadUser();\n        setLiked(!liked);\n      }\n    }\n  };\n\n  if (location.pathname.match(\"/profile\") || location.pathname.match(\"/saved\")) {\n    return null;\n  } else {\n    return React.createElement(\"div\", {\n      className: \"loggedInOuterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LoggedInIconContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, liked ? React.createElement(animated.div, {\n      className: \"animatedHeart\",\n      style: {\n        transform: x.interpolate({\n          range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n          output: [1, 0.99, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n        }).interpolate(x => `scale(${x})`)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: onLiked,\n      src: clipped,\n      alt: \"\",\n      className: \"clippedHeartLiked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })) : React.createElement(\"img\", {\n      \"data-tip\": true,\n      \"data-for\": \"clipTip\",\n      onClick: onLiked,\n      src: unClipped,\n      alt: \"\",\n      className: \"clippedHeart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(ReactTooltip, {\n      id: \"clipTip\",\n      place: \"bottom\",\n      effect: \"solid\",\n      delayHide: 100,\n      delayShow: 300,\n      border: true,\n      multiline: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Clip your favorites.\")), React.createElement(Link, {\n      to: `/${\"u2\"}/profile`,\n      \"data-tip\": true,\n      \"data-for\": \"profileTip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: collection2,\n      className: \"collectionIcon\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(ReactTooltip, {\n      id: \"profileTip\",\n      place: \"bottom\",\n      effect: \"solid\",\n      delayHide: 100,\n      delayShow: 300,\n      border: true,\n      multiline: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"View saved clips\"));\n  }\n};\n\nconst mapStateToProps = state => ({\n  currentVideos: state.Videos,\n  auth: state.Authenticate,\n  vidIndex: state.VideoIndex.currentIndex,\n  categoryVideos: state.Videos,\n  categoryIndex: state.VideoIndex.categoryIndex\n});\n\nexport default connect(mapStateToProps, {\n  addSavedVid,\n  loadUser,\n  delSavedVid\n})(withRouter(LoggedInNav));","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/LoggedInNavState/LoggedInNav.js"],"names":["React","useState","useEffect","Link","withRouter","useLocation","connect","useSpring","animated","ReactTooltip","addSavedVid","loadUser","delSavedVid","clipped","unClipped","collection2","LoggedInNav","vidIndex","categoryIndex","currentVideos","videos","categoryVideos","auth","user","location","savedVideos","setSavedVideos","currentSavedVid","setCurrentSavedVid","liked","setLiked","x","from","config","duration","savedVids","pathname","match","length","map","vid","vidLink","_id","setTimeout","onLiked","transform","interpolate","range","output","mapStateToProps","state","Videos","Authenticate","VideoIndex","currentIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport ReactTooltip from \"react-tooltip\";\n// Redux\nimport { addSavedVid, loadUser, delSavedVid } from \"../../store/actions/Index\";\n// Icons\nimport clipped from \"../../assets/img/clipped.png\";\nimport unClipped from \"../../assets/img/unClipped.png\";\nimport collection2 from \"../../assets/img/pornFolderIcon.png\";\n\nimport \"./LoggedInNav.scss\";\n\nconst LoggedInNav = ({\n  vidIndex,\n  categoryIndex,\n  currentVideos: { videos },\n  categoryVideos: { categoryVideos },\n  auth: { user },\n  addSavedVid,\n  delSavedVid\n}) => {\n  const location = useLocation();\n  const [savedVideos, setSavedVideos] = useState([]);\n  const [currentSavedVid, setCurrentSavedVid] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: !liked ? 0.5 : 0,\n    config: { duration: 300 }\n  });\n\n  useEffect(() => {\n    if (user) setSavedVideos(user.savedVids);\n  }, [setSavedVideos, user]);\n\n  // Check to see if video liked\n  useEffect(() => {\n    if (location.pathname.match(\"/categories/\")) {\n      categoryVideos.length > 0 &&\n        savedVideos &&\n        savedVideos.length > 0 &&\n        savedVideos.map(vid => {\n          if (vid.vidLink === categoryVideos[categoryIndex].vidLink) {\n            setCurrentSavedVid(vid._id);\n            return setTimeout(() => setLiked(true), 50);\n          } else {\n            return setLiked(false);\n          }\n        });\n    } else {\n      videos.length > 0 &&\n        savedVideos &&\n        savedVideos.length > 0 &&\n        savedVideos.map(vid => {\n          if (vid.vidLink === videos[vidIndex].vidLink) {\n            setCurrentSavedVid(vid._id);\n            return setTimeout(() => setLiked(true), 50);\n          } else {\n            return setLiked(false);\n          }\n        });\n    }\n  }, [\n    setLiked,\n    vidIndex,\n    videos,\n    savedVideos,\n    categoryIndex,\n    categoryVideos,\n    location.pathname\n  ]);\n\n  // Like / unlike video\n  const onLiked = async () => {\n    if (location.pathname.match(\"/categories/\")) {\n      if (liked) {\n        await delSavedVid(currentSavedVid);\n        setLiked(!liked);\n      } else {\n        await addSavedVid(categoryVideos[categoryIndex]);\n        loadUser();\n        setLiked(!liked);\n      }\n    } else {\n      if (liked) {\n        await delSavedVid(currentSavedVid);\n        setLiked(!liked);\n      } else {\n        await addSavedVid(videos[vidIndex]);\n        loadUser();\n        setLiked(!liked);\n      }\n    }\n  };\n\n  if (\n    location.pathname.match(\"/profile\") ||\n    location.pathname.match(\"/saved\")\n  ) {\n    return null;\n  } else {\n    return (\n      <div className=\"loggedInOuterContainer\">\n        <div className=\"LoggedInIconContainer\">\n          {liked ? (\n            <animated.div\n              className=\"animatedHeart\"\n              style={{\n                transform: x\n                  .interpolate({\n                    range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                    output: [1, 0.99, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                  })\n                  .interpolate(x => `scale(${x})`)\n              }}\n            >\n              <img\n                onClick={onLiked}\n                src={clipped}\n                alt=\"\"\n                className=\"clippedHeartLiked\"\n              />\n            </animated.div>\n          ) : (\n            <img\n              data-tip\n              data-for=\"clipTip\"\n              onClick={onLiked}\n              src={unClipped}\n              alt=\"\"\n              className=\"clippedHeart\"\n            />\n          )}\n          <ReactTooltip\n            id=\"clipTip\"\n            place=\"bottom\"\n            effect=\"solid\"\n            delayHide={100}\n            delayShow={300}\n            border\n            multiline={false}\n          >\n            Clip your favorites.\n          </ReactTooltip>\n        </div>\n        <Link to={`/${\"u2\"}/profile`} data-tip data-for=\"profileTip\">\n          <img src={collection2} className=\"collectionIcon\" alt=\"\" />\n        </Link>\n        <ReactTooltip\n          id=\"profileTip\"\n          place=\"bottom\"\n          effect=\"solid\"\n          delayHide={100}\n          delayShow={300}\n          border\n          multiline={false}\n        >\n          View saved clips\n        </ReactTooltip>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  currentVideos: state.Videos,\n  auth: state.Authenticate,\n  vidIndex: state.VideoIndex.currentIndex,\n  categoryVideos: state.Videos,\n  categoryIndex: state.VideoIndex.categoryIndex\n});\n\nexport default connect(\n  mapStateToProps,\n  { addSavedVid, loadUser, delSavedVid }\n)(withRouter(LoggedInNav));\n"]},"metadata":{},"sourceType":"module"}