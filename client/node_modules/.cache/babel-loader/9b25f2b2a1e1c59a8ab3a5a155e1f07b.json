{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR } from \"./ActionTypes\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile created\"));\n\n    if (!edit) {\n      history.push(\"/u2/profile\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/store/actions/Profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","playload","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","deleteAccount","window","confirm","delete","CLEAR_PROFILE","ACCOUNT_DELETED"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport { GET_PROFILE, PROFILE_ERROR } from \"./ActionTypes\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update profile\n\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile created\"));\n\n    if (!edit) {\n      history.push(\"/u2/profile\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete account and profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(\"/api/profile\");\n\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}