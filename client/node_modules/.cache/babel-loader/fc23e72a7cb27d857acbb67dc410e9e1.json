{"ast":null,"code":"import axios from \"axios\";\nimport { GET_VIDEOS, VIDEOS_ERROR } from \"./ActionTypes\"; // Get user saved videos\n// Add saved Video into users array\n\nexport const addSavedVid = savedVid => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/users/savevid\", savedVid, config);\n    dispatch({\n      type: ADD_SAVED_VID,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Clip saved\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete saved video from users array\n// Get all main videos\n\nexport const getSelectedVideos = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/videos\");\n    dispatch({\n      type: GET_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/store/actions/Videos.js"],"names":["axios","GET_VIDEOS","VIDEOS_ERROR","addSavedVid","savedVid","dispatch","config","headers","res","put","type","ADD_SAVED_VID","payload","data","setAlert","err","errors","response","forEach","error","msg","PROFILE_ERROR","playload","statusText","status","getSelectedVideos","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,eAAzC,C,CAEA;AAEA;;AACA,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACvD,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,oBAAV,EAAgCL,QAAhC,EAA0CE,MAA1C,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEC,aADC;AAEPC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAACS,QAAQ,CAAC,YAAD,EAAe,SAAf,CAAT,CAAR;AACD,GAdD,CAcE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBG,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAId,QAAQ,CAACS,QAAQ,CAACK,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AACDf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEW,aADC;AAEPC,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,GAAG,EAAEL,GAAG,CAACE,QAAJ,CAAaM,UAApB;AAAgCC,QAAAA,MAAM,EAAET,GAAG,CAACE,QAAJ,CAAaO;AAArD;AAFH,KAAD,CAAR;AAID;AACF,CA1BM,C,CA4BP;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMpB,QAAN,IAAkB;AACvD,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMR,KAAK,CAAC0B,GAAN,CAAU,aAAV,CAAlB;AAEArB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,UADC;AAEPW,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,YADC;AAEPoB,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,GAAG,EAAEL,GAAG,CAACE,QAAJ,CAAaM,UAApB;AAAgCC,QAAAA,MAAM,EAAET,GAAG,CAACE,QAAJ,CAAaO;AAArD;AAFH,KAAD,CAAR;AAID;AACF,CAdM","sourcesContent":["import axios from \"axios\";\n\nimport { GET_VIDEOS, VIDEOS_ERROR } from \"./ActionTypes\";\n\n// Get user saved videos\n\n// Add saved Video into users array\nexport const addSavedVid = savedVid => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    const res = await axios.put(\"/api/users/savevid\", savedVid, config);\n    dispatch({\n      type: ADD_SAVED_VID,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Clip saved\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete saved video from users array\n\n// Get all main videos\nexport const getSelectedVideos = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/videos\");\n\n    dispatch({\n      type: GET_VIDEOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEOS_ERROR,\n      playload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}