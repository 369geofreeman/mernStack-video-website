{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\"; // Componenets\n\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\";\nimport PageLoadingLogo from \"../../layout/PageLoadingLogo\"; // Redux\n\nimport { currentIndex } from \"../../store/actions/Index\"; // Helper functions\n\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\"; // Styles\n\nimport \"./HomePage.scss\";\n\nconst HomePage = ({\n  currentIndex,\n  currentVideos: {\n    videos\n  },\n  VideoIndex,\n  modalOpen,\n  loading\n}) => {\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [clips] = useState(videos);\n  const [videoLen] = useState(clips.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \"); // Set the Video index from URL\n\n  if (window.location.href.split(\"/\")[3]) {\n    for (let i = 0; i < clips.length; i++) {\n      if (clips[i]._id === +window.location.href.split(\"/\")[3]) {\n        VideoIndex = i;\n      }\n    }\n  } // Assign keybord to video controlls\n\n\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    } // eslint-disable-next-line\n\n  }, [rightPress, dPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    } // eslint-disable-next-line\n\n  }, [leftPress, aPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]); // Set video Controlls\n\n  const nextIndex = () => {\n    currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n  let slides = clips.map((slide, index) => {\n    return React.createElement(\"div\", {\n      \"data-src\": \"\",\n      key: slide.vidLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(VideoTitle, {\n      title: slide.title,\n      category: slide.category,\n      categoryTag: slide.categoryTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(HomePageButtons, {\n      nextIndex: nextIndex,\n      to: `/${clips[vidUrlIndexTo]._id}`,\n      previousIndex: previousIndex,\n      from: `/${clips[vidUrlIndexFrom]._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ReactPlayer, {\n      url: clips[VideoIndex].vidLink,\n      playing: toggleVideoWithSpace,\n      loop: true,\n      controls: true,\n      disablePictureInPicture: true,\n      style: {\n        backgroundColor: \"#000\"\n      },\n      config: {\n        file: {\n          attributes: {\n            controlsList: \"nodownload\",\n            disablepictureinpicture: \"true\"\n          }\n        }\n      },\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  });\n  return loading ? React.createElement(PageLoadingLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"mainPageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(AwesomeSlider, {\n    animation: \"openAnimation\",\n    cssModule: [CoreStyles, AnimationStyles],\n    bullets: false,\n    fillParent: true,\n    style: {\n      backgroundColor: \"#000\"\n    },\n    buttons: false,\n    selected: VideoIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, slides));\n}; //  Redux\n\n\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen,\n    loading: state.Videos.loading,\n    currentVideos: state.Videos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  currentIndex\n})(HomePage);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/containers/HomePage/HomePage.js"],"names":["React","useState","useEffect","AwesomeSlider","ReactPlayer","CoreStyles","AnimationStyles","connect","HomePageButtons","VideoTitle","PageLoadingLogo","currentIndex","useKeyPress","useWindowDimensions","HomePage","currentVideos","videos","VideoIndex","modalOpen","loading","height","width","clips","videoLen","length","toggleVideoWithSpace","setToggleVideoWithSpace","rightPress","dPress","leftPress","aPress","spacePress","window","location","href","split","i","_id","prevState","nextIndex","previousIndex","vidUrlIndexTo","vidUrlIndexFrom","slides","map","slide","index","vidLink","title","category","categoryTag","backgroundColor","file","attributes","controlsList","disablepictureinpicture","mapStateToProps","state","ModalOpen","Videos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport ReactPlayer from \"react-player\";\nimport CoreStyles from \"react-awesome-slider/src/core/styles.scss\";\nimport AnimationStyles from \"react-awesome-slider/src/styled/open-animation/open-animation.scss\";\nimport { connect } from \"react-redux\";\n\n// Componenets\nimport HomePageButtons from \"./HomePageButtons\";\nimport VideoTitle from \"../../components/VideoTitle/VideoTitle\";\nimport PageLoadingLogo from \"../../layout/PageLoadingLogo\";\n// Redux\nimport { currentIndex } from \"../../store/actions/Index\";\n// Helper functions\nimport useKeyPress from \"../../assets/utils/useKeyPress\";\nimport useWindowDimensions from \"../../assets/utils/getWindowDimensions\";\n// Styles\nimport \"./HomePage.scss\";\n\nconst HomePage = ({\n  currentIndex,\n  currentVideos: { videos },\n  VideoIndex,\n  modalOpen,\n  loading\n}) => {\n  const { height, width } = useWindowDimensions();\n  const [clips] = useState(videos);\n  const [videoLen] = useState(clips.length - 1);\n  const [toggleVideoWithSpace, setToggleVideoWithSpace] = useState(true);\n\n  const rightPress = useKeyPress(\"ArrowRight\");\n  const dPress = useKeyPress(\"d\");\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const aPress = useKeyPress(\"a\");\n  const spacePress = useKeyPress(\" \");\n\n  // Set the Video index from URL\n  if (window.location.href.split(\"/\")[3]) {\n    for (let i = 0; i < clips.length; i++) {\n      if (clips[i]._id === +window.location.href.split(\"/\")[3]) {\n        VideoIndex = i;\n      }\n    }\n  }\n\n  // Assign keybord to video controlls\n  useEffect(() => {\n    if (rightPress || dPress) {\n      !modalOpen && currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n    }\n    // eslint-disable-next-line\n  }, [rightPress, dPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (leftPress || aPress) {\n      !modalOpen && currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n    }\n    // eslint-disable-next-line\n  }, [leftPress, aPress, videoLen, currentIndex, modalOpen]);\n  useEffect(() => {\n    if (spacePress) {\n      !modalOpen && setToggleVideoWithSpace(prevState => !prevState);\n    }\n  }, [spacePress, modalOpen]);\n\n  // Set video Controlls\n  const nextIndex = () => {\n    currentIndex(VideoIndex === videoLen ? 0 : VideoIndex + 1);\n  };\n\n  const previousIndex = () => {\n    currentIndex(VideoIndex === 0 ? videoLen : VideoIndex - 1);\n  };\n\n  let vidUrlIndexTo = VideoIndex === videoLen ? VideoIndex : VideoIndex + 1;\n  let vidUrlIndexFrom = VideoIndex === 0 ? videoLen : VideoIndex - 1;\n\n  let slides = clips.map((slide, index) => {\n    return (\n      <div data-src=\"\" key={slide.vidLink}>\n        <VideoTitle\n          title={slide.title}\n          category={slide.category}\n          categoryTag={slide.categoryTag}\n        />\n        <HomePageButtons\n          nextIndex={nextIndex}\n          to={`/${clips[vidUrlIndexTo]._id}`}\n          previousIndex={previousIndex}\n          from={`/${clips[vidUrlIndexFrom]._id}`}\n        />\n        <ReactPlayer\n          url={clips[VideoIndex].vidLink}\n          playing={toggleVideoWithSpace}\n          loop\n          controls\n          disablePictureInPicture={true}\n          style={{ backgroundColor: \"#000\" }}\n          config={{\n            file: {\n              attributes: {\n                controlsList: \"nodownload\",\n                disablepictureinpicture: \"true\"\n              }\n            }\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  });\n\n  return loading ? (\n    <PageLoadingLogo />\n  ) : (\n    <div className=\"mainPageContainer\">\n      <AwesomeSlider\n        animation=\"openAnimation\"\n        cssModule={[CoreStyles, AnimationStyles]}\n        bullets={false}\n        fillParent={true}\n        style={{ backgroundColor: \"#000\" }}\n        buttons={false}\n        selected={VideoIndex}\n      >\n        {slides}\n      </AwesomeSlider>\n    </div>\n  );\n};\n\n//  Redux\nconst mapStateToProps = state => {\n  return {\n    VideoIndex: state.VideoIndex.currentIndex,\n    modalOpen: state.ModalOpen.modalOpen,\n    loading: state.Videos.loading,\n    currentVideos: state.Videos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { currentIndex }\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}