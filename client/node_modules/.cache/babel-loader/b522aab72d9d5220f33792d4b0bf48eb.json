{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ResetPassword/ResetPassword.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Redux\n\nimport { setAlert } from \"../../store/actions/Index\"; // Comoponets\n\nimport Alert from \"../../layout/Alert/Alert\";\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = ({\n  match\n}) => {\n  const [formData, setFormData] = useState({\n    password: \"\",\n    passwordMatch: \"\"\n  });\n  const {\n    password,\n    passwordMatch\n  } = formData;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password === passwordMatch) {\n      let body = await JSON.stringify({\n        password: password,\n        token: match.params.token\n      });\n      console.log(\"password match\");\n\n      try {\n        console.log(\"in try\");\n        await axios.post(\"/api/auth/reset_password/:token\", body, config);\n        setAlert(`Password updated`, \"success\");\n        setFormData({ ...formData,\n          password: \"\",\n          passwordMatch: \"\"\n        });\n        console.log(\"form should have reset\");\n      } catch (err) {\n        const errors = err.response.data.errors;\n        console.log(\"errors should be here\");\n\n        if (errors) {\n          errors.forEach(error => setAlert(error.msg, \"danger\"));\n        }\n      }\n    } else {\n      console.log(\"Yooooo, wrong password Bitch!!!!\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"resetFormPageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    className: \"accountPasswordPageFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"passwordPageTitleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Enter your new password below\"), React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    title: \"Enter new password\",\n    className: \"accountPasswordPageFormInput\",\n    placeholder: \"New Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    title: \"Re-enter new password\",\n    className: \"accountPasswordPageFormInput\",\n    placeholder: \"Re-enter New Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"resetPasswordPageBtn\",\n    title: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/components/ResetPassword/ResetPassword.js"],"names":["React","useState","axios","setAlert","Alert","ResetPassword","match","formData","setFormData","password","passwordMatch","onSubmit","e","preventDefault","config","headers","body","JSON","stringify","token","params","console","log","post","err","errors","response","data","forEach","error","msg"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n// Redux\nimport { setAlert } from \"../../store/actions/Index\";\n// Comoponets\nimport Alert from \"../../layout/Alert/Alert\";\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = ({ match }) => {\n  const [formData, setFormData] = useState({\n    password: \"\",\n    passwordMatch: \"\",\n  });\n  const { password, passwordMatch } = formData;\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password === passwordMatch) {\n      let body = await JSON.stringify({\n        password: password,\n        token: match.params.token,\n      });\n      console.log(\"password match\");\n      try {\n        console.log(\"in try\");\n        await axios.post(\"/api/auth/reset_password/:token\", body, config);\n        setAlert(`Password updated`, \"success\");\n        setFormData({ ...formData, password: \"\", passwordMatch: \"\" });\n        console.log(\"form should have reset\");\n      } catch (err) {\n        const errors = err.response.data.errors;\n        console.log(\"errors should be here\");\n        if (errors) {\n          errors.forEach((error) => setAlert(error.msg, \"danger\"));\n        }\n      }\n    } else {\n      console.log(\"Yooooo, wrong password Bitch!!!!\");\n    }\n  };\n\n  return (\n    <div className=\"resetFormPageContainer\">\n      <form\n        onSubmit={(e) => onSubmit(e)}\n        className=\"accountPasswordPageFormContainer\"\n      >\n        <h2 className=\"passwordPageTitleText\">Enter your new password below</h2>\n        <Alert />\n        <input\n          type=\"password\"\n          title=\"Enter new password\"\n          className=\"accountPasswordPageFormInput\"\n          placeholder=\"New Password\"\n        />\n        <input\n          type=\"password\"\n          title=\"Re-enter new password\"\n          className=\"accountPasswordPageFormInput\"\n          placeholder=\"Re-enter New Password\"\n        />\n        <input type=\"submit\" className=\"resetPasswordPageBtn\" title=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}