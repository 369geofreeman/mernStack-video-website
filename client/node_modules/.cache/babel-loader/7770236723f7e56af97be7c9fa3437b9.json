{"ast":null,"code":"var _jsxFileName = \"/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js\";\nimport React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  const routes = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    location: location || background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(HomePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/:vidId\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(HomePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ToggleSignIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/categories/:categoryId/:vidId\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CategoryPlayer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/:userId/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ProfilePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/saved/:vidId\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(SavedVidsSlider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), background && React.createElement(React.Fragment, null, React.createElement(Route, {\n    path: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/saved/:vidId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ProfilePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/categories\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CategoriesOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n  return routes;\n};\n\nexport default Navigation; // import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n//   let routes;\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n//   return routes;\n// };\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n// export default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["/Users/joshuastevenson/Desktop/Websites/xhkd/client/src/Navigation.js"],"names":["React","Switch","Route","useLocation","Redirect","connect","HomePage","CategoriesOverlay","CategoryPlayer","ProfilePage","SavedVidsSlider","ToggleSignIn","Modal","PrivateRoute","Navigation","location","background","state","routes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\nimport CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\nimport ProfilePage from \"./containers/ProfilePage/ProfilePage\";\nimport SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\nimport ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\nimport Modal from \"./components/LoginModal/Modal\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst Navigation = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n\n  const routes = (\n    <div>\n      <Switch location={location || background}>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/:vidId\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/auth\">\n          <ToggleSignIn />\n        </Route>\n        <Route path=\"/categories/:categoryId/:vidId\" exact>\n          <CategoryPlayer />\n        </Route>\n        <PrivateRoute path=\"/:userId/profile\">\n          <ProfilePage />\n        </PrivateRoute>\n        <PrivateRoute path=\"/saved/:vidId\" exact>\n          <SavedVidsSlider />\n        </PrivateRoute>\n        <Redirect to=\"/\" />\n      </Switch>\n      {background && (\n        <>\n          <Route path=\"/auth\">\n            <Modal />\n          </Route>\n          <PrivateRoute path=\"/saved/:vidId\">\n            <ProfilePage />\n          </PrivateRoute>\n          <Route path=\"/categories\" exact>\n            <CategoriesOverlay />\n          </Route>\n        </>\n      )}\n    </div>\n  );\n\n  return routes;\n};\n\nexport default Navigation;\n\n// import React from \"react\";\n// import { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n// import HomePage from \"./containers/HomePage/HomePage\";\n// import CategoriesOverlay from \"./containers/CategoriesOverlay/CategoriesOverlay\";\n// import CategoryPlayer from \"./containers/CategoryPlayer/CategoryPlayer\";\n// import ProfilePage from \"./containers/ProfilePage/ProfilePage\";\n// import SavedVidsSlider from \"./components/ProfilePage/SavedVidsSliderModel/SavedVidsSlider\";\n// import ToggleSignIn from \"./components/LoginModal/RegisterForm/ToggleSignIn\";\n// import Modal from \"./components/LoginModal/Modal\";\n// import PrivateRoute from \"./PrivateRoute\";\n\n// const Navigation = ({ isAuthenticated }) => {\n//   let location = useLocation();\n//   let background = location.state && location.state.background;\n\n//   let routes;\n\n//   if (isAuthenticated) {\n//     routes = (\n//       <div>\n//         <Switch location={location || background}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <PrivateRoute path=\"/:userId/profile\">\n//             <ProfilePage />\n//           </PrivateRoute>\n//           <PrivateRoute path=\"/saved/:vidId\" exact>\n//             <SavedVidsSlider />\n//           </PrivateRoute>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <PrivateRoute path=\"/saved/:vidId\">\n//               <ProfilePage />\n//             </PrivateRoute>\n//             <Route path=\"/categories\" exact>\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   } else {\n//     routes = (\n//       <div>\n//         <Switch location={background || location}>\n//           <Route path=\"/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/:vidId/\" exact>\n//             <HomePage />\n//           </Route>\n//           <Route path=\"/auth\">\n//             <ToggleSignIn />\n//           </Route>\n//           <Route path=\"/categories/:categoryId/:vidId\" exact>\n//             <CategoryPlayer />\n//           </Route>\n//           <Redirect to=\"/\" />\n//         </Switch>\n//         {background && (\n//           <>\n//             <Route path=\"/auth\">\n//               <Modal />\n//             </Route>\n//             <Route path=\"/categories\">\n//               <CategoriesOverlay />\n//             </Route>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n\n//   return routes;\n// };\n\n// //  Redux mapping\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.Authenticate.isAuthenticated\n//   };\n// };\n\n// export default connect(mapStateToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}